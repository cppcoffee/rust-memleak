<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1030.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1013" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1013" > </text>
<g id="frames">
<g >
<title>sled::arc::Arc&lt;T&gt;::copy_from_slice+0x1f7 (160,992 samples, 29.16%)</title><rect x="549.7" y="53" width="344.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="552.74" y="63.5" >sled::arc::Arc&lt;T&gt;::copy_from_slice+0x1f7</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push+0x81 (64 samples, 0.01%)</title><rect x="1065.0" y="613" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1067.97" y="623.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::get+0xc50 (1,600 samples, 0.29%)</title><rect x="937.9" y="629" width="3.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="940.90" y="639.5" ></text>
</g>
<g >
<title>sled::pagecache::segment::SegmentAccountant::deactivate_segment+0x339 (408 samples, 0.07%)</title><rect x="1070.0" y="581" width="0.9" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1073.03" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow+0x1ca (1,920 samples, 0.35%)</title><rect x="443.0" y="533" width="4.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="446.04" y="543.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (528 samples, 0.10%)</title><rect x="447.1" y="565" width="1.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="450.14" y="575.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::get::{{closure}}+0x4e (37,152 samples, 6.73%)</title><rect x="448.5" y="389" width="79.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="451.46" y="399.5" >sled::pag..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized+0x4ad (1,920 samples, 0.35%)</title><rect x="443.0" y="549" width="4.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="446.04" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (160 samples, 0.03%)</title><rect x="953.0" y="565" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="955.96" y="575.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf+0x16cd (384 samples, 0.07%)</title><rect x="1070.9" y="757" width="0.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1073.91" y="767.5" ></text>
</g>
<g >
<title>sled::node::Node::apply+0x19c (3,840 samples, 0.70%)</title><rect x="438.9" y="613" width="8.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="441.93" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (384 samples, 0.07%)</title><rect x="1070.9" y="725" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1073.91" y="735.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new+0xa (320 samples, 0.06%)</title><rect x="944.2" y="613" width="0.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="947.19" y="623.5" ></text>
</g>
<g >
<title>sled::tree::Tree::insert_inner+0x1a9 (242,768 samples, 43.97%)</title><rect x="438.9" y="677" width="518.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="441.93" y="687.5" >sled::tree::Tree::insert_inner+0x1a9</text>
</g>
<g >
<title>tokio::runtime::task::raw::poll+0x1d (51,200 samples, 9.27%)</title><rect x="1080.6" y="309" width="109.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1083.58" y="319.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new+0x11 (104 samples, 0.02%)</title><rect x="1070.7" y="501" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1073.68" y="511.5" ></text>
</g>
<g >
<title>sled::pagecache::segment::Segment::insert_pid+0x25b (104 samples, 0.02%)</title><rect x="945.5" y="549" width="0.2" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="948.45" y="559.5" ></text>
</g>
<g >
<title>sled::flusher::Flusher::new::{{closure}}+0x23 (4,528 samples, 0.82%)</title><rect x="1070.9" y="821" width="9.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1073.91" y="831.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in+0x50 (104 samples, 0.02%)</title><rect x="1070.7" y="453" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1073.68" y="463.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold+0xb5 (191,872 samples, 34.75%)</title><rect x="527.9" y="453" width="410.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="530.85" y="463.5" >core::iter::traits::iterator::Iterator::try_fold+0xb5</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (528 samples, 0.10%)</title><rect x="447.1" y="549" width="1.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="450.14" y="559.5" ></text>
</g>
<g >
<title>__rust_try+0x1d (2,776 samples, 0.50%)</title><rect x="1065.0" y="901" width="5.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1067.97" y="911.5" ></text>
</g>
<g >
<title>std::sys::backtrace::__rust_begin_short_backtrace+0x11 (493,656 samples, 89.40%)</title><rect x="10.0" y="885" width="1055.0" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >std::sys::backtrace::__rust_begin_short_backtrace+0x11</text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::sa_stabilize::{{closure}}+0xc2 (408 samples, 0.07%)</title><rect x="1070.0" y="613" width="0.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1073.03" y="623.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::bulk_build_from_sorted_iter+0x5e (104 samples, 0.02%)</title><rect x="1070.7" y="517" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1073.68" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::resize+0x74 (64 samples, 0.01%)</title><rect x="448.3" y="581" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="451.32" y="591.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (320 samples, 0.06%)</title><rect x="956.4" y="517" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="959.38" y="527.5" ></text>
</g>
<g >
<title>proxy_cache::main::{{closure}}+0x8c8 (50,176 samples, 9.09%)</title><rect x="957.7" y="709" width="107.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="960.74" y="719.5" >proxy_cache::..</text>
</g>
<g >
<title>sled::pagecache::PageCache::allocate+0x72 (272 samples, 0.05%)</title><rect x="944.9" y="629" width="0.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="947.87" y="639.5" ></text>
</g>
<g >
<title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push+0x375 (104 samples, 0.02%)</title><rect x="1070.5" y="501" width="0.2" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1073.46" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (320 samples, 0.06%)</title><rect x="956.4" y="549" width="0.7" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="959.38" y="559.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::get+0xd54 (320 samples, 0.06%)</title><rect x="944.2" y="629" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="947.19" y="639.5" ></text>
</g>
<g >
<title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set+0x90 (51,200 samples, 9.27%)</title><rect x="1080.6" y="421" width="109.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1083.58" y="431.5" >tokio::runtim..</text>
</g>
<g >
<title>core::iter::adapters::try_process+0x89 (229,024 samples, 41.48%)</title><rect x="448.5" y="581" width="489.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="451.46" y="591.5" >core::iter::adapters::try_process+0x89</text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once+0x26 (2,776 samples, 0.50%)</title><rect x="1065.0" y="725" width="5.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1067.97" y="735.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (680 samples, 0.12%)</title><rect x="954.9" y="485" width="1.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="957.92" y="495.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll+0x38 (51,200 samples, 9.27%)</title><rect x="1080.6" y="165" width="109.4" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1083.58" y="175.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::collections::btree::mem::take_mut::{{closure}}+0x19 (200 samples, 0.04%)</title><rect x="1070.0" y="469" width="0.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1073.03" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (51,200 samples, 9.27%)</title><rect x="1080.6" y="69" width="109.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1083.58" y="79.5" >alloc::alloc:..</text>
</g>
<g >
<title>sled::pagecache::iobuf::roll_iobuf+0x2aa (384 samples, 0.07%)</title><rect x="1070.9" y="773" width="0.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1073.91" y="783.5" ></text>
</g>
<g >
<title>all (552,160 samples, 100%)</title><rect x="10.0" y="981" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter+0x60 (20,640 samples, 3.74%)</title><rect x="893.8" y="245" width="44.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="896.79" y="255.5" >&lt;all..</text>
</g>
<g >
<title>__rust_try+0x1d (51,200 samples, 9.27%)</title><rect x="1080.6" y="661" width="109.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1083.58" y="671.5" >__rust_try+0x1d</text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::write_to_log+0x1b65 (2,304 samples, 0.42%)</title><rect x="1065.1" y="661" width="4.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1068.11" y="671.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone+0x96 (680 samples, 0.12%)</title><rect x="953.5" y="581" width="1.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="956.47" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter+0x15 (186,752 samples, 33.82%)</title><rect x="538.8" y="261" width="399.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="541.79" y="271.5" >&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::Spe..</text>
</g>
<g >
<title>proxy_cache::http_request_handler::{{closure}}+0x61 (51,200 samples, 9.27%)</title><rect x="1080.6" y="117" width="109.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1083.58" y="127.5" >proxy_cache::..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}}+0x24 (229,024 samples, 41.48%)</title><rect x="448.5" y="565" width="489.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="451.46" y="575.5" >&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIter..</text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in+0x3d (104 samples, 0.02%)</title><rect x="945.5" y="421" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="948.45" y="431.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (37,152 samples, 6.73%)</title><rect x="448.5" y="261" width="79.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="451.46" y="271.5" >alloc::al..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once{{vtable.shim}}+0x12 (58,504 samples, 10.60%)</title><rect x="1065.0" y="933" width="125.0" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1067.97" y="943.5" >core::ops::func..</text>
</g>
<g >
<title>crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}}+0x34 (2,304 samples, 0.42%)</title><rect x="1065.1" y="565" width="4.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1068.11" y="575.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::run+0x26e (51,200 samples, 9.27%)</title><rect x="1080.6" y="533" width="109.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1083.58" y="543.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert+0x3a6 (104 samples, 0.02%)</title><rect x="945.5" y="469" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="948.45" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in+0x5a (1,344 samples, 0.24%)</title><rect x="941.3" y="581" width="2.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="944.31" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter+0x28e (5,120 samples, 0.93%)</title><rect x="527.9" y="245" width="10.9" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="530.85" y="255.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle+0x22 (5,120 samples, 0.93%)</title><rect x="538.8" y="181" width="10.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="541.79" y="191.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x2f4 (320 samples, 0.06%)</title><rect x="957.1" y="565" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="960.06" y="575.5" ></text>
</g>
<g >
<title>sled::threadpool::spawn_new_thread::{{closure}}+0x4b (2,776 samples, 0.50%)</title><rect x="1065.0" y="821" width="5.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1067.97" y="831.5" ></text>
</g>
<g >
<title>tokio::runtime::runtime::Runtime::block_on_inner+0xc1 (493,656 samples, 89.40%)</title><rect x="10.0" y="821" width="1055.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >tokio::runtime::runtime::Runtime::block_on_inner+0xc1</text>
</g>
<g >
<title>sled::flusher::run+0x409 (4,144 samples, 0.75%)</title><rect x="1071.7" y="805" width="8.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1074.73" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized+0x4ad (528 samples, 0.10%)</title><rect x="951.8" y="581" width="1.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="954.83" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in+0x5a (680 samples, 0.12%)</title><rect x="954.9" y="549" width="1.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="957.92" y="559.5" ></text>
</g>
<g >
<title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::push+0xad (4,144 samples, 0.75%)</title><rect x="1071.7" y="725" width="8.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1074.73" y="735.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold+0xae (160,992 samples, 29.16%)</title><rect x="549.7" y="165" width="344.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="552.74" y="175.5" >&lt;core::iter::adapters::take::Take&lt;I&gt; as core::..</text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner+0x8a (51,200 samples, 9.27%)</title><rect x="1080.6" y="277" width="109.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1083.58" y="287.5" >tokio::runtim..</text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec+0x4d (1,344 samples, 0.24%)</title><rect x="941.3" y="597" width="2.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="944.31" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (20,640 samples, 3.74%)</title><rect x="893.8" y="69" width="44.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="896.79" y="79.5" >allo..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x2f4 (320 samples, 0.06%)</title><rect x="956.4" y="565" width="0.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="959.38" y="575.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::flush+0x4e (4,144 samples, 0.75%)</title><rect x="1071.7" y="757" width="8.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1074.73" y="767.5" ></text>
</g>
<g >
<title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once+0x22 (51,200 samples, 9.27%)</title><rect x="1080.6" y="197" width="109.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1083.58" y="207.5" >&lt;core::panic:..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared+0x1df (5,120 samples, 0.93%)</title><rect x="538.8" y="213" width="10.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="541.79" y="223.5" ></text>
</g>
<g >
<title>std::sys::backtrace::__rust_begin_short_backtrace+0x1e (2,776 samples, 0.50%)</title><rect x="1065.0" y="837" width="5.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1067.97" y="847.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl+0x43d (5,120 samples, 0.93%)</title><rect x="538.8" y="117" width="10.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="541.79" y="127.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow+0x17a (64 samples, 0.01%)</title><rect x="448.3" y="501" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="451.32" y="511.5" ></text>
</g>
<g >
<title>proxy_cache::main+0xed (493,656 samples, 89.40%)</title><rect x="10.0" y="853" width="1055.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >proxy_cache::main+0xed</text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec+0x59 (680 samples, 0.12%)</title><rect x="954.9" y="565" width="1.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="957.92" y="575.5" ></text>
</g>
<g >
<title>sled::tree::Tree::insert+0x387 (242,768 samples, 43.97%)</title><rect x="438.9" y="693" width="518.8" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="441.93" y="703.5" >sled::tree::Tree::insert+0x387</text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in+0x50 (200 samples, 0.04%)</title><rect x="1070.0" y="389" width="0.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1073.03" y="399.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold+0x38 (37,152 samples, 6.73%)</title><rect x="448.5" y="453" width="79.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="451.46" y="463.5" >&lt;core::it..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter+0x28 (186,752 samples, 33.82%)</title><rect x="538.8" y="325" width="399.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="541.79" y="335.5" >&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::coll..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow+0x2e (1,920 samples, 0.35%)</title><rect x="443.0" y="517" width="4.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="446.04" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (48 samples, 0.01%)</title><rect x="946.1" y="581" width="0.1" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="949.08" y="591.5" ></text>
</g>
<g >
<title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once+0x22 (2,776 samples, 0.50%)</title><rect x="1065.0" y="869" width="5.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1067.97" y="879.5" ></text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init+0x1b (4,144 samples, 0.75%)</title><rect x="1071.7" y="677" width="8.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1074.73" y="687.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (320 samples, 0.06%)</title><rect x="944.2" y="549" width="0.7" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="947.19" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in+0x5a (320 samples, 0.06%)</title><rect x="957.1" y="581" width="0.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="960.06" y="591.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::with_sa+0x1c3 (408 samples, 0.07%)</title><rect x="1070.0" y="629" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1073.03" y="639.5" ></text>
</g>
<g >
<title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::deserialize+0x34f (186,752 samples, 33.82%)</title><rect x="538.8" y="373" width="399.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="541.79" y="383.5" >&lt;sled::node::Data as sled::serialization::Serialize&gt;::..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow+0x2e (2,640 samples, 0.48%)</title><rect x="946.2" y="549" width="5.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="949.19" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (104 samples, 0.02%)</title><rect x="945.5" y="373" width="0.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="948.45" y="383.5" ></text>
</g>
<g >
<title>&lt;&amp;alloc::collections::btree::set::BTreeSet&lt;T,A&gt; as core::ops::arith::Sub&lt;&amp;alloc::collections::btree::set::BTreeSet&lt;T,A&gt;&gt;&gt;::sub+0x7c (408 samples, 0.07%)</title><rect x="1070.0" y="549" width="0.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1073.03" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (680 samples, 0.12%)</title><rect x="954.9" y="501" width="1.5" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="957.92" y="511.5" ></text>
</g>
<g >
<title>sled::pin+0x15 (2,304 samples, 0.42%)</title><rect x="1065.1" y="645" width="4.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1068.11" y="655.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::get+0xd18 (1,344 samples, 0.24%)</title><rect x="941.3" y="629" width="2.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="944.31" y="639.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into+0x1d (37,152 samples, 6.73%)</title><rect x="448.5" y="325" width="79.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="451.46" y="335.5" >&lt;T as cor..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}}+0x34 (493,656 samples, 89.40%)</title><rect x="10.0" y="773" width="1055.0" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}}+0x34</text>
</g>
<g >
<title>tokio::runtime::park::CachedParkThread::block_on+0x2aa (493,656 samples, 89.40%)</title><rect x="10.0" y="741" width="1055.0" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >tokio::runtime::park::CachedParkThread::block_on+0x2aa</text>
</g>
<g >
<title>alloc::raw_vec::finish_grow+0x1ca (5,120 samples, 0.93%)</title><rect x="527.9" y="149" width="10.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="530.85" y="159.5" ></text>
</g>
<g >
<title>sled::tree::Tree::split_node+0xd7 (1,360 samples, 0.25%)</title><rect x="953.5" y="645" width="2.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="956.47" y="655.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once+0xd (2,304 samples, 0.42%)</title><rect x="1065.1" y="517" width="4.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1068.11" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle+0x22 (5,120 samples, 0.93%)</title><rect x="527.9" y="181" width="10.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="530.85" y="191.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (4,144 samples, 0.75%)</title><rect x="1071.7" y="645" width="8.9" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1074.73" y="655.5" ></text>
</g>
<g >
<title>std::rt::lang_start+0x38 (493,656 samples, 89.40%)</title><rect x="10.0" y="933" width="1055.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.00" y="943.5" >std::rt::lang_start+0x38</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (160 samples, 0.03%)</title><rect x="944.9" y="581" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="947.87" y="591.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl+0x43d (1,920 samples, 0.35%)</title><rect x="443.0" y="501" width="4.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="446.04" y="511.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Global::push_bag+0x160 (4,144 samples, 0.75%)</title><rect x="1071.7" y="741" width="8.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1074.73" y="751.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (160 samples, 0.03%)</title><rect x="953.0" y="581" width="0.3" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="955.96" y="591.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow+0x1ca (1,920 samples, 0.35%)</title><rect x="438.9" y="533" width="4.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="441.93" y="543.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (51,200 samples, 9.27%)</title><rect x="1080.6" y="85" width="109.4" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1083.58" y="95.5" >alloc::alloc:..</text>
</g>
<g >
<title>sled::arc::Arc&lt;T&gt;::copy_from_slice+0x1f7 (37,152 samples, 6.73%)</title><rect x="448.5" y="277" width="79.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="451.46" y="287.5" >sled::arc..</text>
</g>
<g >
<title>sled::tree::Tree::view_for_key+0x80b (6,024 samples, 1.09%)</title><rect x="944.9" y="661" width="12.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="947.87" y="671.5" ></text>
</g>
<g >
<title>crossbeam_epoch::guard::Guard::flush+0x47 (4,144 samples, 0.75%)</title><rect x="1071.7" y="773" width="8.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1074.73" y="783.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (1,600 samples, 0.29%)</title><rect x="937.9" y="581" width="3.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="940.90" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}+0x13f (51,200 samples, 9.27%)</title><rect x="1080.6" y="501" width="109.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1083.58" y="511.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in+0x5a (680 samples, 0.12%)</title><rect x="953.5" y="549" width="1.4" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="956.47" y="559.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind+0x52 (51,200 samples, 9.27%)</title><rect x="1080.6" y="677" width="109.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1083.58" y="687.5" >std::panic::c..</text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec+0x59 (680 samples, 0.12%)</title><rect x="953.5" y="565" width="1.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="956.47" y="575.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::poll_future::{{closure}}+0x37 (51,200 samples, 9.27%)</title><rect x="1080.6" y="181" width="109.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1083.58" y="191.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (160,992 samples, 29.16%)</title><rect x="549.7" y="37" width="344.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="552.74" y="47.5" >alloc::alloc::alloc+0x62</text>
</g>
<g >
<title>sled::tree::Tree::view_for_pid+0x75 (236,744 samples, 42.88%)</title><rect x="438.9" y="645" width="506.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="441.93" y="655.5" >sled::tree::Tree::view_for_pid+0x75</text>
</g>
<g >
<title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert+0x16 (104 samples, 0.02%)</title><rect x="945.5" y="533" width="0.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="948.45" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (104 samples, 0.02%)</title><rect x="1070.5" y="421" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1073.46" y="431.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call+0x31 (2,776 samples, 0.50%)</title><rect x="1065.0" y="885" width="5.9" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1067.97" y="895.5" ></text>
</g>
<g >
<title>sled::tree::Tree::view_for_key+0x35a (236,744 samples, 42.88%)</title><rect x="438.9" y="661" width="506.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="441.93" y="671.5" >sled::tree::Tree::view_for_key+0x35a</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (64 samples, 0.01%)</title><rect x="1065.0" y="517" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1067.97" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (1,344 samples, 0.24%)</title><rect x="941.3" y="517" width="2.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="944.31" y="527.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0xf5f (48 samples, 0.01%)</title><rect x="945.3" y="597" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="948.28" y="607.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once+0xe (493,656 samples, 89.40%)</title><rect x="10.0" y="869" width="1055.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >core::ops::function::FnOnce::call_once+0xe</text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}+0x6d (51,200 samples, 9.27%)</title><rect x="1080.6" y="581" width="109.4" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1083.58" y="591.5" >tokio::runtim..</text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked_::{{closure}}+0x1cb (2,776 samples, 0.50%)</title><rect x="1065.0" y="917" width="5.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1067.97" y="927.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::poll_future+0x74 (51,200 samples, 9.27%)</title><rect x="1080.6" y="693" width="109.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1083.58" y="703.5" >tokio::runtim..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}+0x12 (51,200 samples, 9.27%)</title><rect x="1080.6" y="549" width="109.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1083.58" y="559.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (160 samples, 0.03%)</title><rect x="945.7" y="597" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="948.67" y="607.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal+0x21 (200 samples, 0.04%)</title><rect x="1070.0" y="437" width="0.5" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1073.03" y="447.5" ></text>
</g>
<g >
<title>sled::serialization::deserialize_bounded_sequence+0x3d (186,752 samples, 33.82%)</title><rect x="538.8" y="357" width="399.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="541.79" y="367.5" >sled::serialization::deserialize_bounded_sequence+0x3d</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (320 samples, 0.06%)</title><rect x="956.4" y="533" width="0.7" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="959.38" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow+0x1ca (5,120 samples, 0.93%)</title><rect x="538.8" y="149" width="10.9" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="541.79" y="159.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect+0x15 (5,120 samples, 0.93%)</title><rect x="527.9" y="341" width="10.9" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="530.85" y="351.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow+0x2e (5,120 samples, 0.93%)</title><rect x="527.9" y="133" width="10.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="530.85" y="143.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert+0x289 (104 samples, 0.02%)</title><rect x="945.5" y="501" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="948.45" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x31e (50,176 samples, 9.09%)</title><rect x="957.7" y="661" width="107.3" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="960.74" y="671.5" >alloc::raw_ve..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend+0x12 (166,112 samples, 30.08%)</title><rect x="538.8" y="229" width="355.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="541.79" y="239.5" >&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared+0x1df (5,120 samples, 0.93%)</title><rect x="527.9" y="213" width="10.9" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="530.85" y="223.5" ></text>
</g>
<g >
<title>&lt;sled::Link as sled::serialization::Serialize&gt;::deserialize+0x2a8 (37,152 samples, 6.73%)</title><rect x="448.5" y="357" width="79.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="451.46" y="367.5" >&lt;sled::Li..</text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next+0x2a (37,152 samples, 6.73%)</title><rect x="448.5" y="469" width="79.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="451.46" y="479.5" >&lt;core::it..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl+0x43d (528 samples, 0.10%)</title><rect x="951.8" y="533" width="1.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="954.83" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one+0x39 (1,920 samples, 0.35%)</title><rect x="443.0" y="565" width="4.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="446.04" y="575.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with+0x27 (2,304 samples, 0.42%)</title><rect x="1065.1" y="597" width="4.9" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1068.11" y="607.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::InternalNode&lt;K,V&gt;::new+0x2d (200 samples, 0.04%)</title><rect x="1070.0" y="421" width="0.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1073.03" y="431.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new+0x2d (104 samples, 0.02%)</title><rect x="945.5" y="437" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="948.45" y="447.5" ></text>
</g>
<g >
<title>sled::lru::AccessQueue::push+0xb8 (528 samples, 0.10%)</title><rect x="447.1" y="597" width="1.2" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="450.14" y="607.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold+0x38 (160,992 samples, 29.16%)</title><rect x="549.7" y="181" width="344.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="552.74" y="191.5" >&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as co..</text>
</g>
<g >
<title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone+0x3b (680 samples, 0.12%)</title><rect x="954.9" y="597" width="1.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="957.92" y="607.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call+0x24 (2,776 samples, 0.50%)</title><rect x="1065.0" y="773" width="5.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1067.97" y="783.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (160 samples, 0.03%)</title><rect x="953.0" y="597" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="955.96" y="607.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll+0x19 (51,200 samples, 9.27%)</title><rect x="1080.6" y="725" width="109.4" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1083.58" y="735.5" >tokio::runtim..</text>
</g>
<g >
<title>sled::node::Node::split+0x4c1 (640 samples, 0.12%)</title><rect x="956.4" y="629" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="959.38" y="639.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new+0xa (2,304 samples, 0.42%)</title><rect x="1065.1" y="453" width="4.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1068.11" y="463.5" ></text>
</g>
<g >
<title>sled::tree::Tree::split_node+0x34c (272 samples, 0.05%)</title><rect x="944.9" y="645" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="947.87" y="655.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked_::{{closure}}+0x2b9 (55,728 samples, 10.09%)</title><rect x="1070.9" y="917" width="119.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1073.91" y="927.5" >std::thread::B..</text>
</g>
<g >
<title>proxy_cache::main::{{closure}}::{{closure}}+0x116 (51,200 samples, 9.27%)</title><rect x="1080.6" y="133" width="109.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1083.58" y="143.5" >proxy_cache::..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed+0x1e (200,704 samples, 36.35%)</title><rect x="10.0" y="629" width="428.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate..</text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0x42d (160 samples, 0.03%)</title><rect x="945.7" y="613" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="948.67" y="623.5" ></text>
</g>
<g >
<title>tokio::runtime::context::set_scheduler+0x31 (51,200 samples, 9.27%)</title><rect x="1080.6" y="485" width="109.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1083.58" y="495.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (48 samples, 0.01%)</title><rect x="945.3" y="581" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="948.28" y="591.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init+0xa (4,144 samples, 0.75%)</title><rect x="1071.7" y="693" width="8.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1074.73" y="703.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind+0x2f (2,776 samples, 0.50%)</title><rect x="1065.0" y="805" width="5.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1067.97" y="815.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (2,304 samples, 0.42%)</title><rect x="1065.1" y="389" width="4.9" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1068.11" y="399.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}+0x3a (51,200 samples, 9.27%)</title><rect x="1080.6" y="357" width="109.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1083.58" y="367.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (2,304 samples, 0.42%)</title><rect x="1065.1" y="405" width="4.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1068.11" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (64 samples, 0.01%)</title><rect x="448.3" y="453" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="451.32" y="463.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::StabilityIntervals::mark_fsync+0x27a (64 samples, 0.01%)</title><rect x="1065.0" y="629" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1067.97" y="639.5" ></text>
</g>
<g >
<title>sled::arc::Arc&lt;T&gt;::new+0xbf (384 samples, 0.07%)</title><rect x="1070.9" y="741" width="0.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1073.91" y="751.5" ></text>
</g>
<g >
<title>core::iter::adapters::try_process+0x78 (5,120 samples, 0.93%)</title><rect x="527.9" y="309" width="10.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="530.85" y="319.5" ></text>
</g>
<g >
<title>sled::node::Node::set_leaf+0x301 (1,920 samples, 0.35%)</title><rect x="438.9" y="597" width="4.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="441.93" y="607.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call+0x41 (55,728 samples, 10.09%)</title><rect x="1070.9" y="885" width="119.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1073.91" y="895.5" >std::panicking..</text>
</g>
<g >
<title>tokio::runtime::context::set_scheduler::{{closure}}+0x2c (51,200 samples, 9.27%)</title><rect x="1080.6" y="437" width="109.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1083.58" y="447.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (4,144 samples, 0.75%)</title><rect x="1071.7" y="661" width="8.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1074.73" y="671.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve+0x9d (5,120 samples, 0.93%)</title><rect x="527.9" y="197" width="10.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="530.85" y="207.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold+0xb5 (37,152 samples, 6.73%)</title><rect x="448.5" y="421" width="79.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="451.46" y="431.5" >core::ite..</text>
</g>
<g >
<title>sled::tree::Tree::split_node+0x558 (344 samples, 0.06%)</title><rect x="945.5" y="645" width="0.7" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="948.45" y="655.5" ></text>
</g>
<g >
<title>__rust_try+0x1d (55,728 samples, 10.09%)</title><rect x="1070.9" y="901" width="119.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1073.91" y="911.5" >__rust_try+0x1d</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter+0x28e (166,112 samples, 30.08%)</title><rect x="538.8" y="245" width="355.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="541.79" y="255.5" >&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_ite..</text>
</g>
<g >
<title>std::sys::backtrace::__rust_begin_short_backtrace+0xd (55,728 samples, 10.09%)</title><rect x="1070.9" y="837" width="119.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1073.91" y="847.5" >std::sys::back..</text>
</g>
<g >
<title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once+0x31 (55,728 samples, 10.09%)</title><rect x="1070.9" y="869" width="119.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1073.91" y="879.5" >&lt;core::panic::..</text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold+0x38 (20,640 samples, 3.74%)</title><rect x="893.8" y="213" width="44.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="896.79" y="223.5" >&lt;cor..</text>
</g>
<g >
<title>core::iter::adapters::map::map_try_fold::{{closure}}+0x3c (37,152 samples, 6.73%)</title><rect x="448.5" y="405" width="79.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="451.46" y="415.5" >core::ite..</text>
</g>
<g >
<title>tokio::runtime::park::CachedParkThread::block_on::{{closure}}+0x2d (493,656 samples, 89.40%)</title><rect x="10.0" y="725" width="1055.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >tokio::runtime::park::CachedParkThread::block_on::{{closure}}+0x2d</text>
</g>
<g >
<title>__rust_try+0x1d (2,776 samples, 0.50%)</title><rect x="1065.0" y="789" width="5.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1067.97" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x2f4 (680 samples, 0.12%)</title><rect x="953.5" y="533" width="1.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="956.47" y="543.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}+0x31 (55,728 samples, 10.09%)</title><rect x="1070.9" y="853" width="119.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1073.91" y="863.5" >std::thread::B..</text>
</g>
<g >
<title>&lt;sled::node::Node as core::clone::Clone&gt;::clone+0xe5 (1,360 samples, 0.25%)</title><rect x="953.5" y="629" width="2.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="956.47" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed+0x1e (50,176 samples, 9.09%)</title><rect x="957.7" y="645" width="107.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="960.74" y="655.5" >&lt;alloc::alloc..</text>
</g>
<g >
<title>sled::lru::Shard::accessed+0xf1 (64 samples, 0.01%)</title><rect x="448.3" y="597" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="451.32" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter+0x28 (5,120 samples, 0.93%)</title><rect x="527.9" y="277" width="10.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="530.85" y="287.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized+0x4ad (1,920 samples, 0.35%)</title><rect x="438.9" y="549" width="4.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="441.93" y="559.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::pull+0x17f2 (37,152 samples, 6.73%)</title><rect x="448.5" y="373" width="79.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="451.46" y="383.5" >sled::pag..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold+0x46 (20,640 samples, 3.74%)</title><rect x="893.8" y="181" width="44.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="896.79" y="191.5" >core..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert+0xbc (1,920 samples, 0.35%)</title><rect x="443.0" y="581" width="4.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="446.04" y="591.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold+0x38 (191,872 samples, 34.75%)</title><rect x="527.9" y="485" width="410.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="530.85" y="495.5" >&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter:..</text>
</g>
<g >
<title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem+0x6c (50,176 samples, 9.09%)</title><rect x="957.7" y="677" width="107.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="960.74" y="687.5" >&lt;u8 as alloc:..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (200 samples, 0.04%)</title><rect x="1070.0" y="357" width="0.5" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1073.03" y="367.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::with_handle+0x1c (2,304 samples, 0.42%)</title><rect x="1065.1" y="613" width="4.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1068.11" y="623.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::write_to_log+0x1cbe (408 samples, 0.07%)</title><rect x="1070.0" y="661" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1073.03" y="671.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold+0x46 (160,992 samples, 29.16%)</title><rect x="549.7" y="149" width="344.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="552.74" y="159.5" >core::iter::traits::iterator::Iterator::try_fo..</text>
</g>
<g >
<title>sled::tree::Tree::split_node+0xf1 (640 samples, 0.12%)</title><rect x="956.4" y="645" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="959.38" y="655.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (48 samples, 0.01%)</title><rect x="953.4" y="565" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="956.37" y="575.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::sa_stabilize+0x40 (408 samples, 0.07%)</title><rect x="1070.0" y="645" width="0.9" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1073.03" y="655.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (320 samples, 0.06%)</title><rect x="957.1" y="549" width="0.6" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="960.06" y="559.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::sa_mark_replace+0x19d (104 samples, 0.02%)</title><rect x="945.5" y="597" width="0.2" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="948.45" y="607.5" ></text>
</g>
<g >
<title>tokio::runtime::blocking::pool::Inner::run+0x1eb (51,200 samples, 9.27%)</title><rect x="1080.6" y="805" width="109.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1083.58" y="815.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized+0x4ad (5,120 samples, 0.93%)</title><rect x="538.8" y="165" width="10.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="541.79" y="175.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert+0xbc (1,920 samples, 0.35%)</title><rect x="438.9" y="581" width="4.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="441.93" y="591.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared+0x3f (37,152 samples, 6.73%)</title><rect x="448.5" y="485" width="79.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="451.46" y="495.5" >alloc::ve..</text>
</g>
<g >
<title>sled::lru::Lru::accessed+0x1a5 (528 samples, 0.10%)</title><rect x="447.1" y="613" width="1.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="450.14" y="623.5" ></text>
</g>
<g >
<title>sled::pagecache::segment::SegmentAccountant::mark_link+0x6b4 (104 samples, 0.02%)</title><rect x="945.5" y="565" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="948.45" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone+0x96 (1,344 samples, 0.24%)</title><rect x="941.3" y="613" width="2.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="944.31" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (320 samples, 0.06%)</title><rect x="944.2" y="533" width="0.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="947.19" y="543.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}}+0x24 (186,752 samples, 33.82%)</title><rect x="538.8" y="293" width="399.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="541.79" y="303.5" >&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::coll..</text>
</g>
<g >
<title>tokio::runtime::context::runtime::enter_runtime+0xd5 (493,656 samples, 89.40%)</title><rect x="10.0" y="789" width="1055.0" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >tokio::runtime::context::runtime::enter_runtime+0xd5</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (1,600 samples, 0.29%)</title><rect x="937.9" y="613" width="3.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="940.90" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (104 samples, 0.02%)</title><rect x="1070.7" y="437" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1073.68" y="447.5" ></text>
</g>
<g >
<title>sled::tree::Tree::split_node+0x938 (240 samples, 0.04%)</title><rect x="953.0" y="645" width="0.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="955.96" y="655.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend+0x12 (5,120 samples, 0.93%)</title><rect x="527.9" y="229" width="10.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="530.85" y="239.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::bulk_build_from_sorted_iter+0x167 (304 samples, 0.06%)</title><rect x="1070.0" y="517" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1073.03" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (680 samples, 0.12%)</title><rect x="953.5" y="517" width="1.4" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="956.47" y="527.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init+0xa (320 samples, 0.06%)</title><rect x="944.2" y="597" width="0.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="947.19" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (48 samples, 0.01%)</title><rect x="945.3" y="565" width="0.1" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="948.28" y="575.5" ></text>
</g>
<g >
<title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}}+0x1c (2,776 samples, 0.50%)</title><rect x="1065.0" y="757" width="5.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1067.97" y="767.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::pin+0xa (2,304 samples, 0.42%)</title><rect x="1065.1" y="629" width="4.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="1068.11" y="639.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (2,304 samples, 0.42%)</title><rect x="1065.1" y="373" width="4.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1068.11" y="383.5" ></text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init+0x1b (320 samples, 0.06%)</title><rect x="944.2" y="581" width="0.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="947.19" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter+0x2a6 (37,152 samples, 6.73%)</title><rect x="448.5" y="517" width="79.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="451.46" y="527.5" >&lt;alloc::v..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::split_off+0x8d (320 samples, 0.06%)</title><rect x="956.4" y="597" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="959.38" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter+0x28 (229,024 samples, 41.48%)</title><rect x="448.5" y="549" width="489.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="451.46" y="559.5" >&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;..</text>
</g>
<g >
<title>alloc::vec::from_elem+0x22 (200,704 samples, 36.35%)</title><rect x="10.0" y="677" width="428.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >alloc::vec::from_elem+0x22</text>
</g>
<g >
<title>sled::pagecache::PageCache::get+0x1767 (3,840 samples, 0.70%)</title><rect x="438.9" y="629" width="8.2" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="441.93" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow+0x1ca (2,640 samples, 0.48%)</title><rect x="946.2" y="565" width="5.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="949.19" y="575.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf::{{closure}}+0x86 (2,776 samples, 0.50%)</title><rect x="1065.0" y="677" width="5.9" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1067.97" y="687.5" ></text>
</g>
<g >
<title>sled::pagecache::logger::Log::roll_iobuf+0x1c (384 samples, 0.07%)</title><rect x="1070.9" y="789" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1073.91" y="799.5" ></text>
</g>
<g >
<title>&lt;sled::ivec::IVec as core::convert::From&lt;&amp;[u8]&gt;&gt;::from+0x3e (160,992 samples, 29.16%)</title><rect x="549.7" y="85" width="344.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="552.74" y="95.5" >&lt;sled::ivec::IVec as core::convert::From&lt;&amp;[u8]..</text>
</g>
<g >
<title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new+0x2d (104 samples, 0.02%)</title><rect x="1070.7" y="485" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1073.68" y="495.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl+0x43d (1,920 samples, 0.35%)</title><rect x="438.9" y="501" width="4.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="441.93" y="511.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_with+0x66 (64 samples, 0.01%)</title><rect x="448.3" y="565" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="451.32" y="575.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init+0xa (2,304 samples, 0.42%)</title><rect x="1065.1" y="437" width="4.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1068.11" y="447.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (51,200 samples, 9.27%)</title><rect x="1080.6" y="101" width="109.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1083.58" y="111.5" >alloc::alloc:..</text>
</g>
<g >
<title>sled::pagecache::PageCache::allocate_inner+0x6a2 (240 samples, 0.04%)</title><rect x="944.9" y="613" width="0.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="947.87" y="623.5" ></text>
</g>
<g >
<title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::deserialize+0x27d (5,120 samples, 0.93%)</title><rect x="527.9" y="373" width="10.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="530.85" y="383.5" ></text>
</g>
<g >
<title>&lt;sled::serialization::ConsumeSequence&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next+0x75 (20,640 samples, 3.74%)</title><rect x="893.8" y="165" width="44.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="896.79" y="175.5" >&lt;sle..</text>
</g>
<g >
<title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem+0x6c (200,704 samples, 36.35%)</title><rect x="10.0" y="661" width="428.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_ele..</text>
</g>
<g >
<title>sled::pagecache::PageCache::get+0x91a (229,024 samples, 41.48%)</title><rect x="448.5" y="629" width="489.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="451.46" y="639.5" >sled::pagecache::PageCache::get+0x91a</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (48 samples, 0.01%)</title><rect x="953.4" y="597" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="956.37" y="607.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0x42d (160 samples, 0.03%)</title><rect x="953.0" y="613" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="955.96" y="623.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in+0x3d (104 samples, 0.02%)</title><rect x="1070.5" y="453" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1073.46" y="463.5" ></text>
</g>
<g >
<title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::initialize+0x73 (2,304 samples, 0.42%)</title><rect x="1065.1" y="533" width="4.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1068.11" y="543.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert+0x9a (104 samples, 0.02%)</title><rect x="945.5" y="517" width="0.2" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="948.45" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (320 samples, 0.06%)</title><rect x="944.2" y="565" width="0.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="947.19" y="575.5" ></text>
</g>
<g >
<title>&lt;sled::node::Node as sled::serialization::Serialize&gt;::deserialize+0x3de (191,872 samples, 34.75%)</title><rect x="527.9" y="389" width="410.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="530.85" y="399.5" >&lt;sled::node::Node as sled::serialization::Serialize&gt;::d..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert+0xc6 (528 samples, 0.10%)</title><rect x="951.8" y="613" width="1.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="954.83" y="623.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}}+0x60 (51,200 samples, 9.27%)</title><rect x="1080.6" y="405" width="109.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1083.58" y="415.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new+0x2d (104 samples, 0.02%)</title><rect x="1070.5" y="469" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1073.46" y="479.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::poll+0x1f (51,200 samples, 9.27%)</title><rect x="1080.6" y="741" width="109.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1083.58" y="751.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (104 samples, 0.02%)</title><rect x="1070.5" y="405" width="0.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1073.46" y="415.5" ></text>
</g>
<g >
<title>tokio::runtime::task::LocalNotified&lt;S&gt;::run+0x24 (51,200 samples, 9.27%)</title><rect x="1080.6" y="341" width="109.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1083.58" y="351.5" >tokio::runtim..</text>
</g>
<g >
<title>sled::pagecache::PageCache::replace+0x1ce (240 samples, 0.04%)</title><rect x="953.0" y="629" width="0.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="955.96" y="639.5" ></text>
</g>
<g >
<title>sled::pagecache::segment::SegmentAccountant::stabilize+0x569 (408 samples, 0.07%)</title><rect x="1070.0" y="597" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1073.03" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (64 samples, 0.01%)</title><rect x="1065.0" y="533" width="0.1" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1067.97" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone+0x96 (680 samples, 0.12%)</title><rect x="954.9" y="581" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="957.92" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::blocking::pool::Task::run+0x19 (51,200 samples, 9.27%)</title><rect x="1080.6" y="789" width="109.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1083.58" y="799.5" >tokio::runtim..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter+0x15 (229,024 samples, 41.48%)</title><rect x="448.5" y="533" width="489.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="451.46" y="543.5" >&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared+0x3f (160,992 samples, 29.16%)</title><rect x="549.7" y="213" width="344.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="552.74" y="223.5" >alloc::vec::Vec&lt;T,A&gt;::extend_desugared+0x3f</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (104 samples, 0.02%)</title><rect x="945.5" y="357" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="948.45" y="367.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::poll_future+0x73 (51,200 samples, 9.27%)</title><rect x="1080.6" y="261" width="109.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1083.58" y="271.5" >tokio::runtim..</text>
</g>
<g >
<title>&lt;sled::arc::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from+0x19 (160,992 samples, 29.16%)</title><rect x="549.7" y="69" width="344.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="552.74" y="79.5" >&lt;sled::arc::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow+0x2e (5,120 samples, 0.93%)</title><rect x="538.8" y="133" width="10.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="541.79" y="143.5" ></text>
</g>
<g >
<title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init+0x62 (2,304 samples, 0.42%)</title><rect x="1065.1" y="549" width="4.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1068.11" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem+0x22 (50,176 samples, 9.09%)</title><rect x="957.7" y="693" width="107.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="960.74" y="703.5" >alloc::vec::f..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one+0x37 (528 samples, 0.10%)</title><rect x="951.8" y="597" width="1.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="954.83" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized+0x4ad (5,120 samples, 0.93%)</title><rect x="527.9" y="165" width="10.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="530.85" y="175.5" ></text>
</g>
<g >
<title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}+0x9a (51,200 samples, 9.27%)</title><rect x="1080.6" y="821" width="109.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1083.58" y="831.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized+0x4ad (2,640 samples, 0.48%)</title><rect x="946.2" y="581" width="5.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="949.19" y="591.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter+0x28 (229,024 samples, 41.48%)</title><rect x="448.5" y="597" width="489.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="451.46" y="607.5" >&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIter..</text>
</g>
<g >
<title>wakeup_vcpus_on_cpu	[kvm_intel] (552,160 samples, 100.00%)</title><rect x="10.0" y="965" width="1180.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >wakeup_vcpus_on_cpu	[kvm_intel]</text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into+0x1d (20,640 samples, 3.74%)</title><rect x="893.8" y="133" width="44.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="896.79" y="143.5" >&lt;T a..</text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll+0x3c (51,200 samples, 9.27%)</title><rect x="1080.6" y="597" width="109.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1083.58" y="607.5" >tokio::runtim..</text>
</g>
<g >
<title>tokio::runtime::task::harness::poll_future::{{closure}}+0x3b (51,200 samples, 9.27%)</title><rect x="1080.6" y="613" width="109.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1083.58" y="623.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve+0x9d (64 samples, 0.01%)</title><rect x="448.3" y="549" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="451.32" y="559.5" ></text>
</g>
<g >
<title>&lt;sled::ivec::IVec as core::convert::From&lt;&amp;[u8]&gt;&gt;::from+0x3e (37,152 samples, 6.73%)</title><rect x="448.5" y="309" width="79.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="451.46" y="319.5" >&lt;sled::iv..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one+0x39 (64 samples, 0.01%)</title><rect x="1065.0" y="597" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1067.97" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (160 samples, 0.03%)</title><rect x="945.7" y="581" width="0.3" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="948.67" y="591.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (4,144 samples, 0.75%)</title><rect x="1071.7" y="629" width="8.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1074.73" y="639.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::mark_interval+0x358 (64 samples, 0.01%)</title><rect x="1065.0" y="645" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1067.97" y="655.5" ></text>
</g>
<g >
<title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::deserialize+0x1d8 (160,992 samples, 29.16%)</title><rect x="549.7" y="117" width="344.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="552.74" y="127.5" >&lt;sled::ivec::IVec as sled::serialization::Seri..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized+0x4ad (64 samples, 0.01%)</title><rect x="448.3" y="517" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="451.32" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (64 samples, 0.01%)</title><rect x="448.3" y="469" width="0.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="451.32" y="479.5" ></text>
</g>
<g >
<title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone+0x29 (680 samples, 0.12%)</title><rect x="953.5" y="597" width="1.4" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="956.47" y="607.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Context::run+0x261 (51,200 samples, 9.27%)</title><rect x="1080.6" y="389" width="109.4" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1083.58" y="399.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in+0x5a (320 samples, 0.06%)</title><rect x="956.4" y="581" width="0.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="959.38" y="591.5" ></text>
</g>
<g >
<title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once+0x23 (51,200 samples, 9.27%)</title><rect x="1080.6" y="629" width="109.4" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1083.58" y="639.5" >&lt;core::panic:..</text>
</g>
<g >
<title>&lt;sled::node::Data as core::clone::Clone&gt;::clone+0x80 (1,360 samples, 0.25%)</title><rect x="953.5" y="613" width="2.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="956.47" y="623.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold+0x3c (37,152 samples, 6.73%)</title><rect x="448.5" y="437" width="79.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="451.46" y="447.5" >&lt;core::it..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow+0x2e (528 samples, 0.10%)</title><rect x="951.8" y="549" width="1.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="954.83" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow+0x2e (1,920 samples, 0.35%)</title><rect x="438.9" y="517" width="4.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="441.93" y="527.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (64 samples, 0.01%)</title><rect x="448.3" y="485" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="451.32" y="495.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (528 samples, 0.10%)</title><rect x="447.1" y="581" width="1.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="450.14" y="591.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::write_to_log+0x16b5 (64 samples, 0.01%)</title><rect x="1065.0" y="661" width="0.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1067.97" y="671.5" ></text>
</g>
<g >
<title>__rust_try+0x1d (51,200 samples, 9.27%)</title><rect x="1080.6" y="229" width="109.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1083.58" y="239.5" >__rust_try+0x1d</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x31e (200,704 samples, 36.35%)</title><rect x="10.0" y="645" width="428.9" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x31e</text>
</g>
<g >
<title>sled::threadpool::perform_work+0x13f (2,776 samples, 0.50%)</title><rect x="1065.0" y="741" width="5.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1067.97" y="751.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (104 samples, 0.02%)</title><rect x="945.5" y="389" width="0.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="948.45" y="399.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (680 samples, 0.12%)</title><rect x="954.9" y="517" width="1.5" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="957.92" y="527.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}+0x22 (2,776 samples, 0.50%)</title><rect x="1065.0" y="853" width="5.9" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1067.97" y="863.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with+0x12 (51,200 samples, 9.27%)</title><rect x="1080.6" y="469" width="109.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1083.58" y="479.5" >std::thread::..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (48 samples, 0.01%)</title><rect x="945.3" y="549" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="948.28" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (320 samples, 0.06%)</title><rect x="957.1" y="517" width="0.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="960.06" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x2f4 (680 samples, 0.12%)</title><rect x="954.9" y="533" width="1.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="957.92" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow+0x1ca (528 samples, 0.10%)</title><rect x="951.8" y="565" width="1.2" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="954.83" y="575.5" ></text>
</g>
<g >
<title>proxy_cache::main::{{closure}}+0x309 (200,704 samples, 36.35%)</title><rect x="10.0" y="709" width="428.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >proxy_cache::main::{{closure}}+0x309</text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new+0x11 (104 samples, 0.02%)</title><rect x="1070.5" y="485" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1073.46" y="495.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::register+0x25c (2,304 samples, 0.42%)</title><rect x="1065.1" y="469" width="4.9" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1068.11" y="479.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (200 samples, 0.04%)</title><rect x="1070.0" y="373" width="0.5" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1073.03" y="383.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next+0x1e (160,992 samples, 29.16%)</title><rect x="549.7" y="197" width="344.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="552.74" y="207.5" >&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as co..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (384 samples, 0.07%)</title><rect x="1070.9" y="693" width="0.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1073.91" y="703.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner+0x93 (51,200 samples, 9.27%)</title><rect x="1080.6" y="709" width="109.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1083.58" y="719.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::from_sorted_iter+0x5d (408 samples, 0.07%)</title><rect x="1070.0" y="533" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1073.03" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter+0x28 (186,752 samples, 33.82%)</title><rect x="538.8" y="277" width="399.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="541.79" y="287.5" >&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::Fr..</text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into+0x1d (160,992 samples, 29.16%)</title><rect x="549.7" y="101" width="344.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="552.74" y="111.5" >&lt;T as core::convert::Into&lt;U&gt;&gt;::into+0x1d</text>
</g>
<g >
<title>alloc::collections::btree::mem::replace+0x2b (200 samples, 0.04%)</title><rect x="1070.0" y="485" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1073.03" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (1,344 samples, 0.24%)</title><rect x="941.3" y="549" width="2.9" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="944.31" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (104 samples, 0.02%)</title><rect x="1070.7" y="405" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1073.68" y="415.5" ></text>
</g>
<g >
<title>sled::node::Node::parent_split+0x1b3 (528 samples, 0.10%)</title><rect x="951.8" y="629" width="1.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="954.83" y="639.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter+0x60 (191,872 samples, 34.75%)</title><rect x="527.9" y="517" width="410.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="530.85" y="527.5" >&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_neste..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (680 samples, 0.12%)</title><rect x="953.5" y="501" width="1.4" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="956.47" y="511.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing+0xb1 (104 samples, 0.02%)</title><rect x="945.5" y="485" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="948.45" y="495.5" ></text>
</g>
<g >
<title>crossbeam_epoch::collector::Collector::register+0x11 (2,304 samples, 0.42%)</title><rect x="1065.1" y="485" width="4.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="1068.11" y="495.5" ></text>
</g>
<g >
<title>std::rt::lang_start_internal+0x460 (493,656 samples, 89.40%)</title><rect x="10.0" y="917" width="1055.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >std::rt::lang_start_internal+0x460</text>
</g>
<g >
<title>sled::pagecache::segment::Segment::active_to_inactive+0x39f (408 samples, 0.07%)</title><rect x="1070.0" y="565" width="0.9" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="1073.03" y="575.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call+0x36 (51,200 samples, 9.27%)</title><rect x="1080.6" y="213" width="109.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1083.58" y="223.5" >std::panickin..</text>
</g>
<g >
<title>&lt;sled::arc::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from+0x19 (37,152 samples, 6.73%)</title><rect x="448.5" y="293" width="79.4" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="451.46" y="303.5" >&lt;sled::ar..</text>
</g>
<g >
<title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll+0x86 (51,200 samples, 9.27%)</title><rect x="1080.6" y="565" width="109.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1083.58" y="575.5" >&lt;tokio::runti..</text>
</g>
<g >
<title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push+0x34c (200 samples, 0.04%)</title><rect x="1070.0" y="501" width="0.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1073.03" y="511.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in+0x3d (200 samples, 0.04%)</title><rect x="1070.0" y="405" width="0.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1073.03" y="415.5" ></text>
</g>
<g >
<title>sled::node::Node::set_leaf+0x3e4 (1,920 samples, 0.35%)</title><rect x="443.0" y="597" width="4.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="446.04" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x2f4 (1,344 samples, 0.24%)</title><rect x="941.3" y="565" width="2.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="944.31" y="575.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect+0x15 (186,752 samples, 33.82%)</title><rect x="538.8" y="341" width="399.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="541.79" y="351.5" >core::iter::traits::iterator::Iterator::collect+0x15</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (200 samples, 0.04%)</title><rect x="1070.0" y="341" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1073.03" y="351.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (48 samples, 0.01%)</title><rect x="953.4" y="581" width="0.1" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="956.37" y="591.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with+0xd3 (51,200 samples, 9.27%)</title><rect x="1080.6" y="453" width="109.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1083.58" y="463.5" >std::thread::..</text>
</g>
<g >
<title>&lt;sled::ivec::IVec as core::convert::From&lt;&amp;[u8]&gt;&gt;::from+0x3e (20,640 samples, 3.74%)</title><rect x="893.8" y="117" width="44.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="896.79" y="127.5" >&lt;sle..</text>
</g>
<g >
<title>sled::lru::Lru::accessed+0x3ec (88 samples, 0.02%)</title><rect x="448.3" y="613" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="451.27" y="623.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0x1465 (104 samples, 0.02%)</title><rect x="945.5" y="613" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="948.45" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend+0x12 (37,152 samples, 6.73%)</title><rect x="448.5" y="501" width="79.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="451.46" y="511.5" >&lt;alloc::v..</text>
</g>
<g >
<title>sled::tree::Tree::split_node+0x839 (3,168 samples, 0.57%)</title><rect x="946.2" y="645" width="6.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="949.19" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one+0x39 (2,640 samples, 0.48%)</title><rect x="946.2" y="597" width="5.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="949.19" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (384 samples, 0.07%)</title><rect x="1070.9" y="709" width="0.8" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1073.91" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle+0x22 (64 samples, 0.01%)</title><rect x="448.3" y="533" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="451.32" y="543.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next+0x2a (191,872 samples, 34.75%)</title><rect x="527.9" y="501" width="410.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="530.85" y="511.5" >&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter:..</text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::{{closure}}+0x19 (200 samples, 0.04%)</title><rect x="1070.0" y="453" width="0.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1073.03" y="463.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::pull+0x17d6 (191,872 samples, 34.75%)</title><rect x="527.9" y="405" width="410.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="530.85" y="415.5" >sled::pagecache::PageCache::pull+0x17d6</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x1b5 (200,704 samples, 36.35%)</title><rect x="10.0" y="613" width="428.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >alloc::alloc::Global::alloc_impl+0x1b5</text>
</g>
<g >
<title>sled::pagecache::PageCache::get::{{closure}}+0x4e (191,872 samples, 34.75%)</title><rect x="527.9" y="421" width="410.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="530.85" y="431.5" >sled::pagecache::PageCache::get::{{closure}}+0x4e</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once+0x1d (2,304 samples, 0.42%)</title><rect x="1065.1" y="581" width="4.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1068.11" y="591.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0x42d (160 samples, 0.03%)</title><rect x="944.9" y="597" width="0.3" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="947.87" y="607.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll+0x15 (51,200 samples, 9.27%)</title><rect x="1080.6" y="293" width="109.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1083.58" y="303.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl+0x43d (2,640 samples, 0.48%)</title><rect x="946.2" y="533" width="5.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="949.19" y="543.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::attempt_gc+0x1a5 (4,144 samples, 0.75%)</title><rect x="1071.7" y="789" width="8.9" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1074.73" y="799.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow+0x17a (64 samples, 0.01%)</title><rect x="1065.0" y="565" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1067.97" y="575.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in+0x50 (104 samples, 0.02%)</title><rect x="945.5" y="405" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="948.45" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x1b5 (50,176 samples, 9.09%)</title><rect x="957.7" y="629" width="107.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="960.74" y="639.5" >alloc::alloc:..</text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold+0xae (20,640 samples, 3.74%)</title><rect x="893.8" y="197" width="44.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="896.79" y="207.5" >&lt;cor..</text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::poll+0x27 (51,200 samples, 9.27%)</title><rect x="1080.6" y="757" width="109.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1083.58" y="767.5" >tokio::runtim..</text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0xf5f (48 samples, 0.01%)</title><rect x="946.1" y="613" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="949.08" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (48 samples, 0.01%)</title><rect x="946.1" y="565" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="949.08" y="575.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next+0x1e (20,640 samples, 3.74%)</title><rect x="893.8" y="229" width="44.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="896.79" y="239.5" >&lt;cor..</text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0xf5f (48 samples, 0.01%)</title><rect x="953.4" y="613" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="956.37" y="623.5" ></text>
</g>
<g >
<title>&lt;sled::arc::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from+0x19 (20,640 samples, 3.74%)</title><rect x="893.8" y="101" width="44.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="896.79" y="111.5" >&lt;sle..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (1,344 samples, 0.24%)</title><rect x="941.3" y="533" width="2.9" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="944.31" y="543.5" ></text>
</g>
<g >
<title>std::rt::lang_start::{{closure}}+0x14 (493,656 samples, 89.40%)</title><rect x="10.0" y="901" width="1055.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >std::rt::lang_start::{{closure}}+0x14</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (1,600 samples, 0.29%)</title><rect x="937.9" y="597" width="3.4" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="940.90" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (160 samples, 0.03%)</title><rect x="944.9" y="565" width="0.3" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="947.87" y="575.5" ></text>
</g>
<g >
<title>sled::node::Node::split::split_inner+0x7dd (320 samples, 0.06%)</title><rect x="957.1" y="613" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="960.06" y="623.5" ></text>
</g>
<g >
<title>sled::node::Node::split::split_inner+0x118 (320 samples, 0.06%)</title><rect x="956.4" y="613" width="0.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="959.38" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (64 samples, 0.01%)</title><rect x="1065.0" y="549" width="0.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1067.97" y="559.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}+0x69 (51,200 samples, 9.27%)</title><rect x="1080.6" y="149" width="109.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1083.58" y="159.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in+0x3d (104 samples, 0.02%)</title><rect x="1070.7" y="469" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1073.68" y="479.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call+0x37 (51,200 samples, 9.27%)</title><rect x="1080.6" y="645" width="109.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1083.58" y="655.5" >std::panickin..</text>
</g>
<g >
<title>proxy_cache::LargeData::new+0x28 (200,704 samples, 36.35%)</title><rect x="10.0" y="693" width="428.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >proxy_cache::LargeData::new+0x28</text>
</g>
<g >
<title>core::iter::adapters::try_process+0x78 (186,752 samples, 33.82%)</title><rect x="538.8" y="309" width="399.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="541.79" y="319.5" >core::iter::adapters::try_process+0x78</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (160 samples, 0.03%)</title><rect x="945.7" y="565" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="948.67" y="575.5" ></text>
</g>
<g >
<title>sled::serialization::deserialize_bounded_sequence+0x3d (5,120 samples, 0.93%)</title><rect x="527.9" y="357" width="10.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="530.85" y="367.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (104 samples, 0.02%)</title><rect x="1070.5" y="389" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1073.46" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (160 samples, 0.03%)</title><rect x="944.9" y="549" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="947.87" y="559.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once{{vtable.shim}}+0x12 (2,776 samples, 0.50%)</title><rect x="1065.0" y="709" width="5.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1067.97" y="719.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::get+0x1867 (616 samples, 0.11%)</title><rect x="447.1" y="629" width="1.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="450.14" y="639.5" ></text>
</g>
<g >
<title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::deserialize+0x1d8 (37,152 samples, 6.73%)</title><rect x="448.5" y="341" width="79.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="451.46" y="351.5" >&lt;sled::iv..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one+0x39 (1,920 samples, 0.35%)</title><rect x="438.9" y="565" width="4.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="441.93" y="575.5" ></text>
</g>
<g >
<title>sled::arc::Arc&lt;T&gt;::copy_from_slice+0x1f7 (20,640 samples, 3.74%)</title><rect x="893.8" y="85" width="44.1" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="896.79" y="95.5" >sled..</text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init+0x1b (2,304 samples, 0.42%)</title><rect x="1065.1" y="421" width="4.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1068.11" y="431.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::poll+0x27 (51,200 samples, 9.27%)</title><rect x="1080.6" y="325" width="109.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1083.58" y="335.5" >tokio::runtim..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}}+0x24 (5,120 samples, 0.93%)</title><rect x="527.9" y="293" width="10.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="530.85" y="303.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (48 samples, 0.01%)</title><rect x="946.1" y="597" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="949.08" y="607.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold+0x3c (191,872 samples, 34.75%)</title><rect x="527.9" y="469" width="410.0" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="530.85" y="479.5" >&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::tra..</text>
</g>
<g >
<title>core::iter::adapters::map::map_try_fold::{{closure}}+0x3c (191,872 samples, 34.75%)</title><rect x="527.9" y="437" width="410.0" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="530.85" y="447.5" >core::iter::adapters::map::map_try_fold::{{closure}}+0x3c</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized+0x4ad (64 samples, 0.01%)</title><rect x="1065.0" y="581" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1067.97" y="591.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl+0x43d (5,120 samples, 0.93%)</title><rect x="527.9" y="117" width="10.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="530.85" y="127.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;::split+0x1d (104 samples, 0.02%)</title><rect x="945.5" y="453" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="948.45" y="463.5" ></text>
</g>
<g >
<title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on+0x5e (493,656 samples, 89.40%)</title><rect x="10.0" y="757" width="1055.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >tokio::runtime::context::blocking::BlockingRegionGuard::block_on+0x5e</text>
</g>
<g >
<title>sled::pagecache::segment::SegmentAccountant::mark_replace+0xc6 (104 samples, 0.02%)</title><rect x="945.5" y="581" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="948.45" y="591.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::HANDLE::__init+0x13 (2,304 samples, 0.42%)</title><rect x="1065.1" y="501" width="4.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1068.11" y="511.5" ></text>
</g>
<g >
<title>tokio::runtime::task::UnownedTask&lt;S&gt;::run+0x36 (51,200 samples, 9.27%)</title><rect x="1080.6" y="773" width="109.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1083.58" y="783.5" >tokio::runtim..</text>
</g>
<g >
<title>sled::node::Node::parent_split+0x194 (2,640 samples, 0.48%)</title><rect x="946.2" y="629" width="5.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="949.19" y="639.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::replace+0x1ce (344 samples, 0.06%)</title><rect x="945.5" y="629" width="0.7" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="948.45" y="639.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new+0xa (4,144 samples, 0.75%)</title><rect x="1071.7" y="709" width="8.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1074.73" y="719.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve+0x9d (5,120 samples, 0.93%)</title><rect x="538.8" y="197" width="10.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="541.79" y="207.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect+0x15 (229,024 samples, 41.48%)</title><rect x="448.5" y="613" width="489.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="451.46" y="623.5" >core::iter::traits::iterator::Iterator::collect+0x15</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on+0x47 (493,656 samples, 89.40%)</title><rect x="10.0" y="805" width="1055.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >tokio::runtime::scheduler::multi_thread::MultiThread::block_on+0x47</text>
</g>
<g >
<title>&lt;sled::serialization::ConsumeSequence&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next+0x75 (160,992 samples, 29.16%)</title><rect x="549.7" y="133" width="344.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="552.74" y="143.5" >&lt;sled::serialization::ConsumeSequence&lt;T&gt; as co..</text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in+0x50 (104 samples, 0.02%)</title><rect x="1070.5" y="437" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1073.46" y="447.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind+0x52 (51,200 samples, 9.27%)</title><rect x="1080.6" y="245" width="109.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1083.58" y="255.5" >std::panic::c..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (680 samples, 0.12%)</title><rect x="953.5" y="485" width="1.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="956.47" y="495.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter+0x28 (5,120 samples, 0.93%)</title><rect x="527.9" y="325" width="10.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="530.85" y="335.5" ></text>
</g>
<g >
<title>tokio::runtime::runtime::Runtime::block_on+0x147 (493,656 samples, 89.40%)</title><rect x="10.0" y="837" width="1055.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >tokio::runtime::runtime::Runtime::block_on+0x147</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (104 samples, 0.02%)</title><rect x="1070.7" y="421" width="0.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1073.68" y="431.5" ></text>
</g>
<g >
<title>sled::flusher::run+0x1fe (384 samples, 0.07%)</title><rect x="1070.9" y="805" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1073.91" y="815.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter+0x15 (5,120 samples, 0.93%)</title><rect x="527.9" y="261" width="10.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="530.85" y="271.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity+0x2f (320 samples, 0.06%)</title><rect x="957.1" y="597" width="0.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="960.06" y="607.5" ></text>
</g>
<g >
<title>std::sys::pal::unix::thread::Thread::new::thread_start+0x2b (58,504 samples, 10.60%)</title><rect x="1065.0" y="949" width="125.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1067.97" y="959.5" >std::sys::pal::..</text>
</g>
<g >
<title>sled::threadpool::spawn::{{closure}}+0x2d (2,776 samples, 0.50%)</title><rect x="1065.0" y="693" width="5.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1067.97" y="703.5" ></text>
</g>
<g >
<title>tokio::runtime::context::runtime::enter_runtime+0xcd (51,200 samples, 9.27%)</title><rect x="1080.6" y="517" width="109.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1083.58" y="527.5" >tokio::runtim..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task+0x36b (51,200 samples, 9.27%)</title><rect x="1080.6" y="373" width="109.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1083.58" y="383.5" >tokio::runtim..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (320 samples, 0.06%)</title><rect x="957.1" y="533" width="0.6" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="960.06" y="543.5" ></text>
</g>
<g >
<title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::deserialize+0x1d8 (20,640 samples, 3.74%)</title><rect x="893.8" y="149" width="44.1" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="896.79" y="159.5" >&lt;sle..</text>
</g>
<g >
<title>main+0x21 (493,656 samples, 89.40%)</title><rect x="10.0" y="949" width="1055.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="13.00" y="959.5" >main+0x21</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert+0xbc (2,640 samples, 0.48%)</title><rect x="946.2" y="613" width="5.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="949.19" y="623.5" ></text>
</g>
<g >
<title>proxy_cache::main::{{closure}}+0x564 (242,768 samples, 43.97%)</title><rect x="438.9" y="709" width="518.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="441.93" y="719.5" >proxy_cache::main::{{closure}}+0x564</text>
</g>
</g>
</svg>
