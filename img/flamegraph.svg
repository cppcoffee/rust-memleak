<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="998.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="981" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="981" > </text>
<g id="frames">
<g >
<title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set+0x90 (9,216 samples, 6.32%)</title><rect x="1115.4" y="389" width="74.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1118.39" y="399.5" >tokio::r..</text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0xf5f (96 samples, 0.07%)</title><rect x="245.3" y="565" width="0.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="248.29" y="575.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (1,360 samples, 0.93%)</title><rect x="268.5" y="469" width="11.0" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="271.47" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in+0x5a (640 samples, 0.44%)</title><rect x="279.5" y="549" width="5.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="282.48" y="559.5" ></text>
</g>
<g >
<title>sled::flusher::run+0x409 (16,576 samples, 11.37%)</title><rect x="981.2" y="773" width="134.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="984.20" y="783.5" >sled::flusher::r..</text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner+0x8a (9,216 samples, 6.32%)</title><rect x="1115.4" y="245" width="74.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1118.39" y="255.5" >tokio::r..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with+0xd3 (9,216 samples, 6.32%)</title><rect x="1115.4" y="421" width="74.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1118.39" y="431.5" >std::thr..</text>
</g>
<g >
<title>sled::tree::Tree::insert_inner+0x1a9 (5,888 samples, 4.04%)</title><rect x="242.2" y="645" width="47.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="245.18" y="655.5" >sled..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (64 samples, 0.04%)</title><rect x="244.8" y="501" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="247.77" y="511.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked_::{{closure}}+0x2b9 (28,480 samples, 19.54%)</title><rect x="959.4" y="885" width="230.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="962.44" y="895.5" >std::thread::Builder::spawn_un..</text>
</g>
<g >
<title>&lt;sled::ivec::IVec as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from+0x8d (33,024 samples, 22.66%)</title><rect x="580.3" y="629" width="267.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="583.31" y="639.5" >&lt;sled::ivec::IVec as core::convert:..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (40 samples, 0.03%)</title><rect x="850.8" y="517" width="0.3" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="853.77" y="527.5" ></text>
</g>
<g >
<title>sled::node::Node::set_leaf+0x3e4 (13,680 samples, 9.39%)</title><rect x="405.4" y="597" width="110.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="408.45" y="607.5" >sled::node::N..</text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll+0x19 (9,216 samples, 6.32%)</title><rect x="1115.4" y="693" width="74.6" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="1118.39" y="703.5" >tokio::r..</text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0x42d (320 samples, 0.22%)</title><rect x="246.6" y="581" width="2.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="249.58" y="591.5" ></text>
</g>
<g >
<title>crossbeam_epoch::guard::Guard::flush+0x47 (16,576 samples, 11.37%)</title><rect x="981.2" y="741" width="134.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="984.20" y="751.5" >crossbeam_epoch:..</text>
</g>
<g >
<title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once+0x22 (6,216 samples, 4.26%)</title><rect x="909.1" y="837" width="50.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="912.12" y="847.5" >&lt;core..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (384 samples, 0.26%)</title><rect x="847.7" y="517" width="3.1" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="850.66" y="527.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init+0xa (6,216 samples, 4.26%)</title><rect x="909.1" y="533" width="50.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="912.12" y="543.5" >cross..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x2f4 (1,360 samples, 0.93%)</title><rect x="268.5" y="501" width="11.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="271.47" y="511.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init+0xa (864 samples, 0.59%)</title><rect x="573.3" y="565" width="7.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="576.32" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x2f4 (640 samples, 0.44%)</title><rect x="284.7" y="533" width="5.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="287.66" y="543.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}+0x6d (9,216 samples, 6.32%)</title><rect x="1115.4" y="549" width="74.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1118.39" y="559.5" >tokio::r..</text>
</g>
<g >
<title>sled::node::Node::set_leaf+0x301 (13,680 samples, 9.39%)</title><rect x="294.7" y="597" width="110.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="297.70" y="607.5" >sled::node::N..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (864 samples, 0.59%)</title><rect x="573.3" y="501" width="7.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="576.32" y="511.5" ></text>
</g>
<g >
<title>sled::tree::Tree::insert+0x5a (33,024 samples, 22.66%)</title><rect x="580.3" y="661" width="267.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="583.31" y="671.5" >sled::tree::Tree::insert+0x5a</text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::flush+0x4e (6,216 samples, 4.26%)</title><rect x="909.1" y="597" width="50.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="912.12" y="607.5" >cross..</text>
</g>
<g >
<title>sled::pagecache::PageCache::allocate_inner+0x9e9 (64 samples, 0.04%)</title><rect x="246.1" y="581" width="0.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="249.06" y="591.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (96 samples, 0.07%)</title><rect x="245.3" y="549" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="248.29" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (320 samples, 0.22%)</title><rect x="242.2" y="549" width="2.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="245.18" y="559.5" ></text>
</g>
<g >
<title>proxy_cache::main::{{closure}}+0x791 (424 samples, 0.29%)</title><rect x="847.7" y="677" width="3.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="850.66" y="687.5" ></text>
</g>
<g >
<title>std::sys::backtrace::__rust_begin_short_backtrace+0x1e (6,216 samples, 4.26%)</title><rect x="909.1" y="805" width="50.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="912.12" y="815.5" >std::..</text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::poll+0x27 (9,216 samples, 6.32%)</title><rect x="1115.4" y="293" width="74.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1118.39" y="303.5" >tokio::r..</text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec+0x59 (600 samples, 0.41%)</title><rect x="289.8" y="549" width="4.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="292.85" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (320 samples, 0.22%)</title><rect x="253.6" y="549" width="2.6" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="256.58" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (40 samples, 0.03%)</title><rect x="850.8" y="501" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="853.77" y="511.5" ></text>
</g>
<g >
<title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::push+0xad (16,576 samples, 11.37%)</title><rect x="981.2" y="693" width="134.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="984.20" y="703.5" >crossbeam_epoch:..</text>
</g>
<g >
<title>sled::tree::Tree::flush+0x43 (424 samples, 0.29%)</title><rect x="847.7" y="661" width="3.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="850.66" y="671.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::make_stable_inner+0x434 (424 samples, 0.29%)</title><rect x="847.7" y="581" width="3.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="850.66" y="591.5" ></text>
</g>
<g >
<title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}}+0x1c (6,216 samples, 4.26%)</title><rect x="909.1" y="725" width="50.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="912.12" y="735.5" >sled:..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (96 samples, 0.07%)</title><rect x="256.7" y="565" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="259.69" y="575.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (96 samples, 0.07%)</title><rect x="249.7" y="565" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="252.69" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow+0x2e (13,680 samples, 9.39%)</title><rect x="294.7" y="517" width="110.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="297.70" y="527.5" >&lt;alloc::alloc..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (64 samples, 0.04%)</title><rect x="249.2" y="501" width="0.5" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="252.17" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (640 samples, 0.44%)</title><rect x="279.5" y="501" width="5.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="282.48" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (1,360 samples, 0.93%)</title><rect x="268.5" y="485" width="11.0" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="271.47" y="495.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call+0x31 (6,216 samples, 4.26%)</title><rect x="909.1" y="853" width="50.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="912.12" y="863.5" >std::..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (864 samples, 0.59%)</title><rect x="573.3" y="533" width="7.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="576.32" y="543.5" ></text>
</g>
<g >
<title>unknown_0x7272b8c29d90 (111,064 samples, 76.20%)</title><rect x="10.0" y="933" width="899.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="13.00" y="943.5" >unknown_0x7272b8c29d90</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl+0x43d (13,680 samples, 9.39%)</title><rect x="294.7" y="501" width="110.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="297.70" y="511.5" >alloc::alloc:..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in+0x5a (1,360 samples, 0.93%)</title><rect x="257.5" y="517" width="11.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="260.46" y="527.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in+0x5a (3,984 samples, 2.73%)</title><rect x="541.1" y="597" width="32.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="544.06" y="607.5" >al..</text>
</g>
<g >
<title>tokio::runtime::blocking::pool::Task::run+0x19 (9,216 samples, 6.32%)</title><rect x="1115.4" y="757" width="74.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1118.39" y="767.5" >tokio::r..</text>
</g>
<g >
<title>sled::node::Node::apply+0x19c (27,360 samples, 18.77%)</title><rect x="294.7" y="613" width="221.5" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="297.70" y="623.5" >sled::node::Node::apply+0x19c</text>
</g>
<g >
<title>&lt;sled::arc::Arc&lt;[T]&gt; as core::convert::From&lt;alloc::vec::Vec&lt;T&gt;&gt;&gt;::from+0x50 (33,024 samples, 22.66%)</title><rect x="580.3" y="613" width="267.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="583.31" y="623.5" >&lt;sled::arc::Arc&lt;[T]&gt; as core::conve..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x31e (7,168 samples, 4.92%)</title><rect x="851.1" y="629" width="58.0" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="854.09" y="639.5" >alloc:..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (64 samples, 0.04%)</title><rect x="256.2" y="517" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="259.17" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (1,360 samples, 0.93%)</title><rect x="257.5" y="453" width="11.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="260.46" y="463.5" ></text>
</g>
<g >
<title>sled::threadpool::spawn+0x16e (40 samples, 0.03%)</title><rect x="850.8" y="549" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="853.77" y="559.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::make_stable+0x1e (424 samples, 0.29%)</title><rect x="847.7" y="597" width="3.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="850.66" y="607.5" ></text>
</g>
<g >
<title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem+0x6c (7,168 samples, 4.92%)</title><rect x="851.1" y="645" width="58.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="854.09" y="655.5" >&lt;u8 as..</text>
</g>
<g >
<title>&lt;sled::node::Node as core::clone::Clone&gt;::clone+0xe5 (600 samples, 0.41%)</title><rect x="289.8" y="613" width="4.9" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="292.85" y="623.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Context::run+0x261 (9,216 samples, 6.32%)</title><rect x="1115.4" y="357" width="74.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1118.39" y="367.5" >tokio::r..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (9,216 samples, 6.32%)</title><rect x="1115.4" y="69" width="74.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1118.39" y="79.5" >alloc::a..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in+0x5a (600 samples, 0.41%)</title><rect x="289.8" y="533" width="4.9" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="292.85" y="543.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0x6ee (64 samples, 0.04%)</title><rect x="256.2" y="581" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="259.17" y="591.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once{{vtable.shim}}+0x12 (34,696 samples, 23.80%)</title><rect x="909.1" y="901" width="280.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="912.12" y="911.5" >core::ops::function::FnOnce::call_onc..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (64 samples, 0.04%)</title><rect x="249.2" y="485" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="252.17" y="495.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call+0x36 (9,216 samples, 6.32%)</title><rect x="1115.4" y="181" width="74.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1118.39" y="191.5" >std::pan..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (864 samples, 0.59%)</title><rect x="573.3" y="517" width="7.0" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="576.32" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (64 samples, 0.04%)</title><rect x="256.2" y="485" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="259.17" y="495.5" ></text>
</g>
<g >
<title>sled::pagecache::pagetable::PageTable::insert+0xac (64 samples, 0.04%)</title><rect x="246.1" y="565" width="0.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="249.06" y="575.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (16,576 samples, 11.37%)</title><rect x="981.2" y="597" width="134.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="984.20" y="607.5" >alloc::alloc::al..</text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0x6ee (64 samples, 0.04%)</title><rect x="244.8" y="565" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="247.77" y="575.5" ></text>
</g>
<g >
<title>std::sys::pal::unix::thread::Thread::new::thread_start+0x2b (34,696 samples, 23.80%)</title><rect x="909.1" y="917" width="280.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="912.12" y="927.5" >std::sys::pal::unix::thread::Thread::..</text>
</g>
<g >
<title>alloc::raw_vec::finish_grow+0x1ca (13,680 samples, 9.39%)</title><rect x="405.4" y="533" width="110.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="408.45" y="543.5" >alloc::raw_ve..</text>
</g>
<g >
<title>sled::tree::Tree::split_node+0x34c (544 samples, 0.37%)</title><rect x="242.2" y="613" width="4.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="245.18" y="623.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::allocate+0x72 (544 samples, 0.37%)</title><rect x="242.2" y="597" width="4.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="245.18" y="607.5" ></text>
</g>
<g >
<title>&lt;sled::node::Data as core::clone::Clone&gt;::clone+0x80 (600 samples, 0.41%)</title><rect x="289.8" y="597" width="4.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="292.85" y="607.5" ></text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init+0x1b (6,216 samples, 4.26%)</title><rect x="909.1" y="517" width="50.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="912.12" y="527.5" >&lt;T as..</text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new+0xa (864 samples, 0.59%)</title><rect x="573.3" y="581" width="7.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="576.32" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow+0x2e (320 samples, 0.22%)</title><rect x="250.5" y="517" width="2.6" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="253.47" y="527.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::poll+0x1f (9,216 samples, 6.32%)</title><rect x="1115.4" y="709" width="74.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1118.39" y="719.5" >tokio::r..</text>
</g>
<g >
<title>std::rt::lang_start::{{closure}}+0x14 (111,064 samples, 76.20%)</title><rect x="10.0" y="869" width="899.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >std::rt::lang_start::{{closure}}+0x14</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow+0x2e (64 samples, 0.04%)</title><rect x="253.1" y="517" width="0.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="256.06" y="527.5" ></text>
</g>
<g >
<title>proxy_cache::LargeData::new+0x28 (28,672 samples, 19.67%)</title><rect x="10.0" y="661" width="232.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >proxy_cache::LargeData::new+0x28</text>
</g>
<g >
<title>tokio::runtime::task::UnownedTask&lt;S&gt;::run+0x36 (9,216 samples, 6.32%)</title><rect x="1115.4" y="741" width="74.6" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1118.39" y="751.5" >tokio::r..</text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::sa_mark_link+0xfa (864 samples, 0.59%)</title><rect x="573.3" y="613" width="7.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="576.32" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (512 samples, 0.35%)</title><rect x="536.9" y="549" width="4.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="539.92" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (640 samples, 0.44%)</title><rect x="284.7" y="517" width="5.1" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="287.66" y="527.5" ></text>
</g>
<g >
<title>sled::arc::Arc&lt;T&gt;::new+0xbf (2,688 samples, 1.84%)</title><rect x="959.4" y="709" width="21.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="962.44" y="719.5" >s..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (320 samples, 0.22%)</title><rect x="253.6" y="565" width="2.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="256.58" y="575.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (2,560 samples, 1.76%)</title><rect x="516.2" y="613" width="20.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="519.20" y="623.5" ></text>
</g>
<g >
<title>sled::tree::Tree::split_node+0xf1 (1,280 samples, 0.88%)</title><rect x="279.5" y="613" width="10.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="282.48" y="623.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll+0x38 (9,216 samples, 6.32%)</title><rect x="1115.4" y="133" width="74.6" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="1118.39" y="143.5" >tokio::r..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (640 samples, 0.44%)</title><rect x="284.7" y="501" width="5.1" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="287.66" y="511.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (6,216 samples, 4.26%)</title><rect x="909.1" y="485" width="50.3" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="912.12" y="495.5" >alloc..</text>
</g>
<g >
<title>alloc::vec::from_elem+0x22 (28,672 samples, 19.67%)</title><rect x="10.0" y="645" width="232.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >alloc::vec::from_elem+0x22</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one+0x37 (64 samples, 0.04%)</title><rect x="253.1" y="565" width="0.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="256.06" y="575.5" ></text>
</g>
<g >
<title>tokio::runtime::park::CachedParkThread::block_on::{{closure}}+0x2d (111,064 samples, 76.20%)</title><rect x="10.0" y="693" width="899.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >tokio::runtime::park::CachedParkThread::block_on::{{closure}}+0x2d</text>
</g>
<g >
<title>__rust_try+0x1d (9,216 samples, 6.32%)</title><rect x="1115.4" y="197" width="74.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1118.39" y="207.5" >__rust_t..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}+0x13f (9,216 samples, 6.32%)</title><rect x="1115.4" y="469" width="74.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1118.39" y="479.5" >tokio::r..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task+0x36b (9,216 samples, 6.32%)</title><rect x="1115.4" y="341" width="74.6" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1118.39" y="351.5" >tokio::r..</text>
</g>
<g >
<title>sled::tree::Tree::split_node+0xd7 (2,720 samples, 1.87%)</title><rect x="257.5" y="613" width="22.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="260.46" y="623.5" >s..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized+0x4ad (64 samples, 0.04%)</title><rect x="253.1" y="549" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="256.06" y="559.5" ></text>
</g>
<g >
<title>tokio::runtime::runtime::Runtime::block_on+0x147 (111,064 samples, 76.20%)</title><rect x="10.0" y="805" width="899.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >tokio::runtime::runtime::Runtime::block_on+0x147</text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new+0xa (512 samples, 0.35%)</title><rect x="536.9" y="613" width="4.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="539.92" y="623.5" ></text>
</g>
<g >
<title>sled::tree::Tree::view_for_key+0x80b (5,888 samples, 4.04%)</title><rect x="242.2" y="629" width="47.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="245.18" y="639.5" >sled..</text>
</g>
<g >
<title>alloc::raw_vec::finish_grow+0x1ca (13,680 samples, 9.39%)</title><rect x="294.7" y="533" width="110.7" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="297.70" y="543.5" >alloc::raw_ve..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (9,216 samples, 6.32%)</title><rect x="1115.4" y="37" width="74.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1118.39" y="47.5" >alloc::a..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (64 samples, 0.04%)</title><rect x="246.1" y="469" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="249.06" y="479.5" ></text>
</g>
<g >
<title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone+0x29 (1,360 samples, 0.93%)</title><rect x="257.5" y="565" width="11.0" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="260.46" y="575.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (96 samples, 0.07%)</title><rect x="256.7" y="549" width="0.8" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="259.69" y="559.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::poll+0x1d (9,216 samples, 6.32%)</title><rect x="1115.4" y="277" width="74.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1118.39" y="287.5" >tokio::r..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}+0x12 (9,216 samples, 6.32%)</title><rect x="1115.4" y="517" width="74.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1118.39" y="527.5" >tokio::r..</text>
</g>
<g >
<title>sled::pagecache::PageCache::replace+0x1ce (480 samples, 0.33%)</title><rect x="253.6" y="597" width="3.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="256.58" y="607.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new+0xa (6,216 samples, 4.26%)</title><rect x="909.1" y="549" width="50.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="912.12" y="559.5" >cross..</text>
</g>
<g >
<title>sled::pagecache::PageCache::attempt_gc+0x1a5 (16,576 samples, 11.37%)</title><rect x="981.2" y="757" width="134.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="984.20" y="767.5" >sled::pagecache:..</text>
</g>
<g >
<title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone+0x3b (600 samples, 0.41%)</title><rect x="289.8" y="581" width="4.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="292.85" y="591.5" ></text>
</g>
<g >
<title>sled::arc::Arc&lt;T&gt;::copy_from_slice+0x1f7 (33,024 samples, 22.66%)</title><rect x="580.3" y="597" width="267.4" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="583.31" y="607.5" >sled::arc::Arc&lt;T&gt;::copy_from_slice+..</text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init+0x1b (64 samples, 0.04%)</title><rect x="246.1" y="517" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="249.06" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (512 samples, 0.35%)</title><rect x="536.9" y="533" width="4.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="539.92" y="543.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::link+0x365 (600 samples, 0.41%)</title><rect x="289.8" y="629" width="4.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="292.85" y="639.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll+0x15 (9,216 samples, 6.32%)</title><rect x="1115.4" y="261" width="74.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1118.39" y="271.5" >tokio::r..</text>
</g>
<g >
<title>std::sys::backtrace::__rust_begin_short_backtrace+0x11 (111,064 samples, 76.20%)</title><rect x="10.0" y="853" width="899.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >std::sys::backtrace::__rust_begin_short_backtrace+0x11</text>
</g>
<g >
<title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf+0x16cd (384 samples, 0.26%)</title><rect x="847.7" y="565" width="3.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="850.66" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized+0x4ad (13,680 samples, 9.39%)</title><rect x="405.4" y="549" width="110.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="408.45" y="559.5" >alloc::raw_ve..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (3,984 samples, 2.73%)</title><rect x="541.1" y="549" width="32.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="544.06" y="559.5" >al..</text>
</g>
<g >
<title>sled::pagecache::iobuf::roll_iobuf+0x2aa (2,688 samples, 1.84%)</title><rect x="959.4" y="741" width="21.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="962.44" y="751.5" >s..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert+0xc6 (64 samples, 0.04%)</title><rect x="253.1" y="581" width="0.5" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="256.06" y="591.5" ></text>
</g>
<g >
<title>sled::tree::Tree::split_node+0x558 (480 samples, 0.33%)</title><rect x="246.6" y="613" width="3.9" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="249.58" y="623.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::replace+0x1ce (480 samples, 0.33%)</title><rect x="246.6" y="597" width="3.9" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="249.58" y="607.5" ></text>
</g>
<g >
<title>proxy_cache::http_request_handler::{{closure}}+0x61 (9,216 samples, 6.32%)</title><rect x="1115.4" y="85" width="74.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1118.39" y="95.5" >proxy_ca..</text>
</g>
<g >
<title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on+0x5e (111,064 samples, 76.20%)</title><rect x="10.0" y="725" width="899.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >tokio::runtime::context::blocking::BlockingRegionGuard::block_on+0x5e</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (64 samples, 0.04%)</title><rect x="244.8" y="469" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="247.77" y="479.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call+0x37 (9,216 samples, 6.32%)</title><rect x="1115.4" y="613" width="74.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1118.39" y="623.5" >std::pan..</text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init+0x1b (16,576 samples, 11.37%)</title><rect x="981.2" y="645" width="134.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="984.20" y="655.5" >&lt;T as crossbeam_..</text>
</g>
<g >
<title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}+0x9a (9,216 samples, 6.32%)</title><rect x="1115.4" y="789" width="74.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1118.39" y="799.5" >tokio::r..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in+0x5a (640 samples, 0.44%)</title><rect x="284.7" y="549" width="5.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="287.66" y="559.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf::{{closure}}+0x86 (6,216 samples, 4.26%)</title><rect x="909.1" y="645" width="50.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="912.12" y="655.5" >sled:..</text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init+0x1b (64 samples, 0.04%)</title><rect x="244.8" y="517" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="247.77" y="527.5" ></text>
</g>
<g >
<title>proxy_cache::main::{{closure}}+0x564 (74,792 samples, 51.31%)</title><rect x="242.2" y="677" width="605.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="245.18" y="687.5" >proxy_cache::main::{{closure}}+0x564</text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0xf5f (96 samples, 0.07%)</title><rect x="256.7" y="581" width="0.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="259.69" y="591.5" ></text>
</g>
<g >
<title>sled::flusher::Flusher::new::{{closure}}+0x23 (19,264 samples, 13.22%)</title><rect x="959.4" y="789" width="156.0" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="962.44" y="799.5" >sled::flusher::Flush..</text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init+0xa (16,576 samples, 11.37%)</title><rect x="981.2" y="661" width="134.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="984.20" y="671.5" >crossbeam_epoch:..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with+0x12 (9,216 samples, 6.32%)</title><rect x="1115.4" y="437" width="74.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1118.39" y="447.5" >std::thr..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (600 samples, 0.41%)</title><rect x="289.8" y="469" width="4.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="292.85" y="479.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Global::push_bag+0x160 (16,576 samples, 11.37%)</title><rect x="981.2" y="709" width="134.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="984.20" y="719.5" >crossbeam_epoch:..</text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0x6ee (64 samples, 0.04%)</title><rect x="249.2" y="581" width="0.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="252.17" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::poll_future+0x73 (9,216 samples, 6.32%)</title><rect x="1115.4" y="229" width="74.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1118.39" y="239.5" >tokio::r..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone+0x96 (600 samples, 0.41%)</title><rect x="289.8" y="565" width="4.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="292.85" y="575.5" ></text>
</g>
<g >
<title>sled::stack::Stack&lt;T&gt;::push+0x155 (864 samples, 0.59%)</title><rect x="573.3" y="597" width="7.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="576.32" y="607.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::poll_future::{{closure}}+0x37 (9,216 samples, 6.32%)</title><rect x="1115.4" y="149" width="74.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1118.39" y="159.5" >tokio::r..</text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init+0xa (64 samples, 0.04%)</title><rect x="249.2" y="549" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="252.17" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (2,688 samples, 1.84%)</title><rect x="959.4" y="661" width="21.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="962.44" y="671.5" >a..</text>
</g>
<g >
<title>std::rt::lang_start_internal+0x460 (111,064 samples, 76.20%)</title><rect x="10.0" y="885" width="899.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >std::rt::lang_start_internal+0x460</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl+0x43d (13,680 samples, 9.39%)</title><rect x="405.4" y="501" width="110.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="408.45" y="511.5" >alloc::alloc:..</text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new+0xa (64 samples, 0.04%)</title><rect x="249.2" y="565" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="252.17" y="575.5" ></text>
</g>
<g >
<title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem+0x6c (28,672 samples, 19.67%)</title><rect x="10.0" y="629" width="232.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >&lt;u8 as alloc::vec::spec_from_e..</text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new+0xa (64 samples, 0.04%)</title><rect x="246.1" y="549" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="249.06" y="559.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::link+0x5e3 (512 samples, 0.35%)</title><rect x="536.9" y="629" width="4.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="539.92" y="639.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll+0x86 (9,216 samples, 6.32%)</title><rect x="1115.4" y="533" width="74.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1118.39" y="543.5" >&lt;tokio::..</text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}+0x31 (28,480 samples, 19.54%)</title><rect x="959.4" y="821" width="230.6" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="962.44" y="831.5" >std::thread::Builder::spawn_un..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}}+0x34 (111,064 samples, 76.20%)</title><rect x="10.0" y="741" width="899.1" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}}+0x34</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (1,360 samples, 0.93%)</title><rect x="268.5" y="453" width="11.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="271.47" y="463.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed+0x1e (28,672 samples, 19.67%)</title><rect x="10.0" y="597" width="232.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >&lt;alloc::alloc::Global as core:..</text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec+0x59 (1,360 samples, 0.93%)</title><rect x="268.5" y="533" width="11.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="271.47" y="543.5" ></text>
</g>
<g >
<title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once+0x31 (28,480 samples, 19.54%)</title><rect x="959.4" y="837" width="230.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="962.44" y="847.5" >&lt;core::panic::unwind_safe::Ass..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (6,216 samples, 4.26%)</title><rect x="909.1" y="469" width="50.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="912.12" y="479.5" >alloc..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}+0x3a (9,216 samples, 6.32%)</title><rect x="1115.4" y="325" width="74.6" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1118.39" y="335.5" >tokio::r..</text>
</g>
<g >
<title>__rust_try+0x1d (6,216 samples, 4.26%)</title><rect x="909.1" y="757" width="50.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="912.12" y="767.5" >__rus..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert+0xbc (13,680 samples, 9.39%)</title><rect x="294.7" y="581" width="110.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="297.70" y="591.5" >alloc::vec::V..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (640 samples, 0.44%)</title><rect x="284.7" y="485" width="5.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="287.66" y="495.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity+0x2f (3,984 samples, 2.73%)</title><rect x="541.1" y="613" width="32.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="544.06" y="623.5" >al..</text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init+0x1b (64 samples, 0.04%)</title><rect x="256.2" y="533" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="259.17" y="543.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::flush+0x4e (16,576 samples, 11.37%)</title><rect x="981.2" y="725" width="134.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="984.20" y="735.5" >crossbeam_epoch:..</text>
</g>
<g >
<title>tokio::runtime::task::LocalNotified&lt;S&gt;::run+0x24 (9,216 samples, 6.32%)</title><rect x="1115.4" y="309" width="74.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1118.39" y="319.5" >tokio::r..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (96 samples, 0.07%)</title><rect x="245.3" y="533" width="0.8" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="248.29" y="543.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::flush+0x8c (424 samples, 0.29%)</title><rect x="847.7" y="613" width="3.4" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="850.66" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone+0x96 (1,360 samples, 0.93%)</title><rect x="257.5" y="549" width="11.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="260.46" y="559.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (600 samples, 0.41%)</title><rect x="289.8" y="501" width="4.9" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="292.85" y="511.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0x42d (320 samples, 0.22%)</title><rect x="253.6" y="581" width="2.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="256.58" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::poll+0x27 (9,216 samples, 6.32%)</title><rect x="1115.4" y="725" width="74.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1118.39" y="735.5" >tokio::r..</text>
</g>
<g >
<title>sled::node::Node::split+0x4c1 (1,280 samples, 0.88%)</title><rect x="279.5" y="597" width="10.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="282.48" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (64 samples, 0.04%)</title><rect x="246.1" y="485" width="0.5" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="249.06" y="495.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::link+0x46f (2,560 samples, 1.76%)</title><rect x="516.2" y="629" width="20.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="519.20" y="639.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}+0x69 (9,216 samples, 6.32%)</title><rect x="1115.4" y="117" width="74.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1118.39" y="127.5" >tokio::r..</text>
</g>
<g >
<title>sled::pagecache::logger::Log::flush+0x1c (424 samples, 0.29%)</title><rect x="847.7" y="629" width="3.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="850.66" y="639.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::flush+0x1d (424 samples, 0.29%)</title><rect x="847.7" y="645" width="3.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="850.66" y="655.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone+0x96 (1,360 samples, 0.93%)</title><rect x="268.5" y="549" width="11.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="271.47" y="559.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new+0xa (64 samples, 0.04%)</title><rect x="256.2" y="565" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="259.17" y="575.5" ></text>
</g>
<g >
<title>all (145,760 samples, 100%)</title><rect x="10.0" y="949" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="959.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (640 samples, 0.44%)</title><rect x="279.5" y="485" width="5.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="282.48" y="495.5" ></text>
</g>
<g >
<title>tokio::runtime::park::CachedParkThread::block_on+0x2aa (111,064 samples, 76.20%)</title><rect x="10.0" y="709" width="899.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >tokio::runtime::park::CachedParkThread::block_on+0x2aa</text>
</g>
<g >
<title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once+0x23 (9,216 samples, 6.32%)</title><rect x="1115.4" y="597" width="74.6" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1118.39" y="607.5" >&lt;core::p..</text>
</g>
<g >
<title>alloc::raw_vec::finish_grow+0x1ca (64 samples, 0.04%)</title><rect x="253.1" y="533" width="0.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="256.06" y="543.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (16,576 samples, 11.37%)</title><rect x="981.2" y="613" width="134.2" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="984.20" y="623.5" >alloc::alloc::Gl..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one+0x39 (13,680 samples, 9.39%)</title><rect x="405.4" y="565" width="110.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="408.45" y="575.5" >alloc::raw_ve..</text>
</g>
<g >
<title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf+0x1c1d (40 samples, 0.03%)</title><rect x="850.8" y="565" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="853.77" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow+0x2e (13,680 samples, 9.39%)</title><rect x="405.4" y="517" width="110.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="408.45" y="527.5" >&lt;alloc::alloc..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (320 samples, 0.22%)</title><rect x="246.6" y="533" width="2.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="249.58" y="543.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (64 samples, 0.04%)</title><rect x="249.2" y="517" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="252.17" y="527.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::link+0x381 (27,360 samples, 18.77%)</title><rect x="294.7" y="629" width="221.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="297.70" y="639.5" >sled::pagecache::PageCache::l..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x1b5 (28,672 samples, 19.67%)</title><rect x="10.0" y="581" width="232.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >alloc::alloc::Global::alloc_im..</text>
</g>
<g >
<title>&lt;sled::node::Node as core::clone::Clone&gt;::clone+0xe5 (2,720 samples, 1.87%)</title><rect x="257.5" y="597" width="22.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="260.46" y="607.5" >&lt;..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (384 samples, 0.26%)</title><rect x="847.7" y="533" width="3.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="850.66" y="543.5" ></text>
</g>
<g >
<title>proxy_cache::main::{{closure}}+0x309 (28,672 samples, 19.67%)</title><rect x="10.0" y="677" width="232.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >proxy_cache::main::{{closure}}..</text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}+0x22 (6,216 samples, 4.26%)</title><rect x="909.1" y="821" width="50.3" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="912.12" y="831.5" >std::..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl+0x43d (64 samples, 0.04%)</title><rect x="253.1" y="501" width="0.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="256.06" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x2f4 (640 samples, 0.44%)</title><rect x="279.5" y="533" width="5.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="282.48" y="543.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (33,024 samples, 22.66%)</title><rect x="580.3" y="581" width="267.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="583.31" y="591.5" >alloc::alloc::alloc+0x62</text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init+0x1b (64 samples, 0.04%)</title><rect x="249.2" y="533" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="252.17" y="543.5" ></text>
</g>
<g >
<title>std::sys::backtrace::__rust_begin_short_backtrace+0xd (28,480 samples, 19.54%)</title><rect x="959.4" y="805" width="230.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="962.44" y="815.5" >std::sys::backtrace::__rust_be..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (96 samples, 0.07%)</title><rect x="256.7" y="533" width="0.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="259.69" y="543.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (16,576 samples, 11.37%)</title><rect x="981.2" y="629" width="134.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="984.20" y="639.5" >alloc::alloc::ex..</text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once+0x26 (6,216 samples, 4.26%)</title><rect x="909.1" y="693" width="50.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="912.12" y="703.5" >&lt;allo..</text>
</g>
<g >
<title>proxy_cache::main::{{closure}}+0x8c8 (7,168 samples, 4.92%)</title><rect x="851.1" y="677" width="58.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="854.09" y="687.5" >proxy_..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (1,360 samples, 0.93%)</title><rect x="257.5" y="469" width="11.0" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="260.46" y="479.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x31e (28,672 samples, 19.67%)</title><rect x="10.0" y="613" width="232.1" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >alloc::raw_vec::RawVecInner&lt;A&gt;..</text>
</g>
<g >
<title>tokio::runtime::blocking::pool::Inner::run+0x1eb (9,216 samples, 6.32%)</title><rect x="1115.4" y="773" width="74.6" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1118.39" y="783.5" >tokio::r..</text>
</g>
<g >
<title>sled::arc::Arc&lt;T&gt;::new+0xbf (384 samples, 0.26%)</title><rect x="847.7" y="549" width="3.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="850.66" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x1b5 (7,168 samples, 4.92%)</title><rect x="851.1" y="597" width="58.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="854.09" y="607.5" >alloc:..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one+0x39 (320 samples, 0.22%)</title><rect x="250.5" y="565" width="2.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="253.47" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one+0x39 (13,680 samples, 9.39%)</title><rect x="294.7" y="565" width="110.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="297.70" y="575.5" >alloc::raw_ve..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x2f4 (1,360 samples, 0.93%)</title><rect x="257.5" y="501" width="11.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="260.46" y="511.5" ></text>
</g>
<g >
<title>sled::flusher::run+0x1fe (2,688 samples, 1.84%)</title><rect x="959.4" y="773" width="21.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="962.44" y="783.5" >s..</text>
</g>
<g >
<title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once+0x22 (9,216 samples, 6.32%)</title><rect x="1115.4" y="165" width="74.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1118.39" y="175.5" >&lt;core::p..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once{{vtable.shim}}+0x12 (6,216 samples, 4.26%)</title><rect x="909.1" y="677" width="50.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="912.12" y="687.5" >core:..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (6,216 samples, 4.26%)</title><rect x="909.1" y="501" width="50.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="912.12" y="511.5" >alloc..</text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll+0x3c (9,216 samples, 6.32%)</title><rect x="1115.4" y="565" width="74.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1118.39" y="575.5" >tokio::r..</text>
</g>
<g >
<title>tokio::runtime::context::runtime::enter_runtime+0xd5 (111,064 samples, 76.20%)</title><rect x="10.0" y="757" width="899.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >tokio::runtime::context::runtime::enter_runtime+0xd5</text>
</g>
<g >
<title>proxy_cache::main+0xed (111,064 samples, 76.20%)</title><rect x="10.0" y="821" width="899.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >proxy_cache::main+0xed</text>
</g>
<g >
<title>alloc::raw_vec::finish_grow+0x1ca (320 samples, 0.22%)</title><rect x="250.5" y="533" width="2.6" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="253.47" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (640 samples, 0.44%)</title><rect x="279.5" y="517" width="5.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="282.48" y="527.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new+0xa (64 samples, 0.04%)</title><rect x="244.8" y="549" width="0.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="247.77" y="559.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked_::{{closure}}+0x1cb (6,216 samples, 4.26%)</title><rect x="909.1" y="885" width="50.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="912.12" y="895.5" >std::..</text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner+0x93 (9,216 samples, 6.32%)</title><rect x="1115.4" y="677" width="74.6" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1118.39" y="687.5" >tokio::r..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once+0xe (111,064 samples, 76.20%)</title><rect x="10.0" y="837" width="899.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >core::ops::function::FnOnce::call_once+0xe</text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into+0x15 (33,024 samples, 22.66%)</title><rect x="580.3" y="645" width="267.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="583.31" y="655.5" >&lt;T as core::convert::Into&lt;U&gt;&gt;::into..</text>
</g>
<g >
<title>&lt;sled::node::Data as core::clone::Clone&gt;::clone+0x80 (2,720 samples, 1.87%)</title><rect x="257.5" y="581" width="22.0" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="260.46" y="591.5" >&lt;..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (320 samples, 0.22%)</title><rect x="246.6" y="549" width="2.6" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="249.58" y="559.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec+0x59 (1,360 samples, 0.93%)</title><rect x="257.5" y="533" width="11.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="260.46" y="543.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (600 samples, 0.41%)</title><rect x="289.8" y="485" width="4.9" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="292.85" y="495.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init+0xa (64 samples, 0.04%)</title><rect x="244.8" y="533" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="247.77" y="543.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init+0xa (64 samples, 0.04%)</title><rect x="246.1" y="533" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="249.06" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized+0x4ad (320 samples, 0.22%)</title><rect x="250.5" y="549" width="2.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="253.47" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (2,688 samples, 1.84%)</title><rect x="959.4" y="677" width="21.8" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="962.44" y="687.5" >a..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x2f4 (3,984 samples, 2.73%)</title><rect x="541.1" y="581" width="32.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="544.06" y="591.5" >al..</text>
</g>
<g >
<title>crossbeam_epoch::internal::Global::push_bag+0x160 (6,216 samples, 4.26%)</title><rect x="909.1" y="581" width="50.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="912.12" y="591.5" >cross..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (320 samples, 0.22%)</title><rect x="242.2" y="517" width="2.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="245.18" y="527.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::allocate_inner+0x6a2 (480 samples, 0.33%)</title><rect x="242.2" y="581" width="3.9" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="245.18" y="591.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::write_to_log+0x1c51 (6,216 samples, 4.26%)</title><rect x="909.1" y="629" width="50.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="912.12" y="639.5" >sled:..</text>
</g>
<g >
<title>std::panicking::try::do_call+0x24 (6,216 samples, 4.26%)</title><rect x="909.1" y="741" width="50.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="912.12" y="751.5" >std::..</text>
</g>
<g >
<title>__rust_try+0x1d (6,216 samples, 4.26%)</title><rect x="909.1" y="869" width="50.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="912.12" y="879.5" >__rus..</text>
</g>
<g >
<title>sled::threadpool::spawn::{{closure}}+0x2d (6,216 samples, 4.26%)</title><rect x="909.1" y="661" width="50.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="912.12" y="671.5" >sled:..</text>
</g>
<g >
<title>crossbeam_epoch::guard::Guard::flush+0x47 (6,216 samples, 4.26%)</title><rect x="909.1" y="613" width="50.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="912.12" y="623.5" >cross..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::split_off+0x8d (640 samples, 0.44%)</title><rect x="279.5" y="565" width="5.2" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="282.48" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert+0xbc (320 samples, 0.22%)</title><rect x="250.5" y="581" width="2.6" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="253.47" y="591.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (2,560 samples, 1.76%)</title><rect x="516.2" y="581" width="20.7" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="519.20" y="591.5" ></text>
</g>
<g >
<title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone+0x3b (1,360 samples, 0.93%)</title><rect x="268.5" y="565" width="11.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="271.47" y="575.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init+0xa (64 samples, 0.04%)</title><rect x="256.2" y="549" width="0.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="259.17" y="559.5" ></text>
</g>
<g >
<title>__rust_try+0x1d (9,216 samples, 6.32%)</title><rect x="1115.4" y="629" width="74.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1118.39" y="639.5" >__rust_t..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in+0x2f4 (600 samples, 0.41%)</title><rect x="289.8" y="517" width="4.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="292.85" y="527.5" ></text>
</g>
<g >
<title>sled::pagecache::logger::Log::roll_iobuf+0x1c (2,688 samples, 1.84%)</title><rect x="959.4" y="757" width="21.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="962.44" y="767.5" >s..</text>
</g>
<g >
<title>sled::node::Node::split::split_inner+0x118 (640 samples, 0.44%)</title><rect x="279.5" y="581" width="5.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="282.48" y="591.5" ></text>
</g>
<g >
<title>proxy_cache::main::{{closure}}::{{closure}}+0x116 (9,216 samples, 6.32%)</title><rect x="1115.4" y="101" width="74.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1118.39" y="111.5" >proxy_ca..</text>
</g>
<g >
<title>sled::tree::Tree::split_node+0x839 (384 samples, 0.26%)</title><rect x="250.5" y="613" width="3.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="253.47" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (64 samples, 0.04%)</title><rect x="244.8" y="485" width="0.5" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="247.77" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized+0x4ad (13,680 samples, 9.39%)</title><rect x="294.7" y="549" width="110.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="297.70" y="559.5" >alloc::raw_ve..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (320 samples, 0.22%)</title><rect x="242.2" y="533" width="2.6" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="245.18" y="543.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (320 samples, 0.22%)</title><rect x="246.6" y="565" width="2.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="249.58" y="575.5" ></text>
</g>
<g >
<title>__rust_try+0x1d (28,480 samples, 19.54%)</title><rect x="959.4" y="869" width="230.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="962.44" y="879.5" >__rust_try+0x1d</text>
</g>
<g >
<title>std::panic::catch_unwind+0x2f (6,216 samples, 4.26%)</title><rect x="909.1" y="773" width="50.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="912.12" y="783.5" >std::..</text>
</g>
<g >
<title>sled::tree::Tree::insert+0x387 (41,768 samples, 28.66%)</title><rect x="242.2" y="661" width="338.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="245.18" y="671.5" >sled::tree::Tree::insert+0x387</text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new+0xa (16,576 samples, 11.37%)</title><rect x="981.2" y="677" width="134.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="984.20" y="687.5" >crossbeam_epoch:..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (2,688 samples, 1.84%)</title><rect x="959.4" y="693" width="21.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="962.44" y="703.5" >a..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in+0x5a (1,360 samples, 0.93%)</title><rect x="268.5" y="517" width="11.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="271.47" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (40 samples, 0.03%)</title><rect x="850.8" y="533" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="853.77" y="543.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind+0x52 (9,216 samples, 6.32%)</title><rect x="1115.4" y="645" width="74.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1118.39" y="655.5" >std::pan..</text>
</g>
<g >
<title>sled::node::Node::split::split_inner+0x7dd (640 samples, 0.44%)</title><rect x="284.7" y="581" width="5.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="287.66" y="591.5" ></text>
</g>
<g >
<title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::push+0xad (6,216 samples, 4.26%)</title><rect x="909.1" y="565" width="50.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="912.12" y="575.5" >cross..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity+0x2f (640 samples, 0.44%)</title><rect x="284.7" y="565" width="5.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="287.66" y="575.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl+0x43d (320 samples, 0.22%)</title><rect x="250.5" y="501" width="2.6" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="253.47" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (3,984 samples, 2.73%)</title><rect x="541.1" y="565" width="32.2" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="544.06" y="575.5" >&lt;a..</text>
</g>
<g >
<title>alloc::vec::from_elem+0x22 (7,168 samples, 4.92%)</title><rect x="851.1" y="661" width="58.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="854.09" y="671.5" >alloc:..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (96 samples, 0.07%)</title><rect x="249.7" y="549" width="0.8" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="252.69" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (3,984 samples, 2.73%)</title><rect x="541.1" y="533" width="32.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="544.06" y="543.5" >al..</text>
</g>
<g >
<title>sled::pagecache::PageCache::link+0xfc7 (864 samples, 0.59%)</title><rect x="573.3" y="629" width="7.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="576.32" y="639.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (96 samples, 0.07%)</title><rect x="249.7" y="533" width="0.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="252.69" y="543.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0xf5f (96 samples, 0.07%)</title><rect x="249.7" y="581" width="0.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="252.69" y="591.5" ></text>
</g>
<g >
<title>main+0x21 (111,064 samples, 76.20%)</title><rect x="10.0" y="917" width="899.1" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >main+0x21</text>
</g>
<g >
<title>std::panicking::try::do_call+0x41 (28,480 samples, 19.54%)</title><rect x="959.4" y="853" width="230.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="962.44" y="863.5" >std::panicking::try::do_call+0..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (512 samples, 0.35%)</title><rect x="536.9" y="565" width="4.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="539.92" y="575.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::poll_future+0x74 (9,216 samples, 6.32%)</title><rect x="1115.4" y="661" width="74.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1118.39" y="671.5" >tokio::r..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate+0x1b (1,360 samples, 0.93%)</title><rect x="257.5" y="485" width="11.0" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="260.46" y="495.5" ></text>
</g>
<g >
<title>unknown_0x7272b8c94ac3 (34,696 samples, 23.80%)</title><rect x="909.1" y="933" width="280.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="912.12" y="943.5" >unknown_0x7272b8c94ac3</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}}+0x60 (9,216 samples, 6.32%)</title><rect x="1115.4" y="373" width="74.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1118.39" y="383.5" >tokio::r..</text>
</g>
<g >
<title>tokio::runtime::runtime::Runtime::block_on_inner+0xc1 (111,064 samples, 76.20%)</title><rect x="10.0" y="789" width="899.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >tokio::runtime::runtime::Runtime::block_on_inner+0xc1</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (64 samples, 0.04%)</title><rect x="256.2" y="501" width="0.5" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="259.17" y="511.5" ></text>
</g>
<g >
<title>tokio::runtime::context::set_scheduler::{{closure}}+0x2c (9,216 samples, 6.32%)</title><rect x="1115.4" y="405" width="74.6" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1118.39" y="415.5" >tokio::r..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (2,560 samples, 1.76%)</title><rect x="516.2" y="597" width="20.7" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="519.20" y="607.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init+0xa (512 samples, 0.35%)</title><rect x="536.9" y="597" width="4.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="539.92" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl+0x154 (9,216 samples, 6.32%)</title><rect x="1115.4" y="53" width="74.6" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="1118.39" y="63.5" >alloc::a..</text>
</g>
<g >
<title>tokio::runtime::context::runtime::enter_runtime+0xcd (9,216 samples, 6.32%)</title><rect x="1115.4" y="485" width="74.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1118.39" y="495.5" >tokio::r..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc+0x4a (64 samples, 0.04%)</title><rect x="246.1" y="501" width="0.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="249.06" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed+0x1e (7,168 samples, 4.92%)</title><rect x="851.1" y="613" width="58.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="854.09" y="623.5" >&lt;alloc..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (96 samples, 0.07%)</title><rect x="245.3" y="517" width="0.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="248.29" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (384 samples, 0.26%)</title><rect x="847.7" y="501" width="3.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="850.66" y="511.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page+0x42d (320 samples, 0.22%)</title><rect x="242.2" y="565" width="2.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="245.18" y="575.5" ></text>
</g>
<g >
<title>sled::node::Node::parent_split+0x1b3 (64 samples, 0.04%)</title><rect x="253.1" y="597" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="256.06" y="607.5" ></text>
</g>
<g >
<title>sled::threadpool::perform_work+0x13f (6,216 samples, 4.26%)</title><rect x="909.1" y="709" width="50.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="912.12" y="719.5" >sled:..</text>
</g>
<g >
<title>std::panic::catch_unwind+0x52 (9,216 samples, 6.32%)</title><rect x="1115.4" y="213" width="74.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1118.39" y="223.5" >std::pan..</text>
</g>
<g >
<title>sled::pagecache::PageCache::link+0x90c (3,984 samples, 2.73%)</title><rect x="541.1" y="629" width="32.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="544.06" y="639.5" >sl..</text>
</g>
<g >
<title>tokio::runtime::task::harness::poll_future::{{closure}}+0x3b (9,216 samples, 6.32%)</title><rect x="1115.4" y="581" width="74.6" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1118.39" y="591.5" >tokio::r..</text>
</g>
<g >
<title>std::rt::lang_start+0x38 (111,064 samples, 76.20%)</title><rect x="10.0" y="901" width="899.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >std::rt::lang_start+0x38</text>
</g>
<g >
<title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf+0x16cd (2,688 samples, 1.84%)</title><rect x="959.4" y="725" width="21.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="962.44" y="735.5" >s..</text>
</g>
<g >
<title>alloc::alloc::alloc+0x62 (320 samples, 0.22%)</title><rect x="253.6" y="533" width="2.6" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="256.58" y="543.5" ></text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init+0x1b (864 samples, 0.59%)</title><rect x="573.3" y="549" width="7.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="576.32" y="559.5" ></text>
</g>
<g >
<title>sled::node::Node::parent_split+0x194 (320 samples, 0.22%)</title><rect x="250.5" y="597" width="2.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="253.47" y="607.5" ></text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init+0x1b (512 samples, 0.35%)</title><rect x="536.9" y="581" width="4.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="539.92" y="591.5" ></text>
</g>
<g >
<title>sled::tree::Tree::insert_inner+0x635 (35,880 samples, 24.62%)</title><rect x="289.8" y="645" width="290.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="292.85" y="655.5" >sled::tree::Tree::insert_inner+0x635</text>
</g>
<g >
<title>tokio::runtime::context::set_scheduler+0x31 (9,216 samples, 6.32%)</title><rect x="1115.4" y="453" width="74.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1118.39" y="463.5" >tokio::r..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on+0x47 (111,064 samples, 76.20%)</title><rect x="10.0" y="773" width="899.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >tokio::runtime::scheduler::multi_thread::MultiThread::block_on+0x47</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::run+0x26e (9,216 samples, 6.32%)</title><rect x="1115.4" y="501" width="74.6" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="1118.39" y="511.5" >tokio::r..</text>
</g>
<g >
<title>sled::tree::Tree::split_node+0x938 (480 samples, 0.33%)</title><rect x="253.6" y="613" width="3.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="256.58" y="623.5" ></text>
</g>
<g >
<title>sled::threadpool::spawn_new_thread::{{closure}}+0x4b (6,216 samples, 4.26%)</title><rect x="909.1" y="789" width="50.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="912.12" y="799.5" >sled:..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert+0xbc (13,680 samples, 9.39%)</title><rect x="405.4" y="581" width="110.8" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="408.45" y="591.5" >alloc::vec::V..</text>
</g>
</g>
</svg>
