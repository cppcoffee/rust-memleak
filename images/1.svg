<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1030.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1013" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1013" > </text>
<g id="frames">
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/core.rs:331) +0x6d (31,744 samples, 2.11%)</title><rect x="1165.1" y="581" width="24.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1168.14" y="591.5" >t..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/traits/iterator.rs:2405) +0xb5 (688,560 samples, 45.70%)</title><rect x="106.7" y="453" width="539.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="109.72" y="463.5" >core::iter::traits::iterator::Iterator::try_fold (/rustc/f6e511eec7342f59a..</text>
</g>
<g >
<title>sled::node::Node::parent_split (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/node.rs:163) +0x1b3 (640 samples, 0.04%)</title><rect x="1125.4" y="629" width="0.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1128.42" y="639.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/convert/mod.rs:759) +0x1d (66,048 samples, 4.38%)</title><rect x="645.9" y="325" width="51.8" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="648.94" y="335.5" >&lt;T as..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (160 samples, 0.01%)</title><rect x="711.9" y="565" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="714.88" y="575.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:1581) +0xbc (3,200 samples, 0.21%)</title><rect x="697.7" y="581" width="2.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="700.66" y="591.5" ></text>
</g>
<g >
<title>std::panic::catch_unwind (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/panic.rs:345) +0x52 (31,744 samples, 2.11%)</title><rect x="1165.1" y="677" width="24.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1168.14" y="687.5" >s..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:349) +0x39 (3,200 samples, 0.21%)</title><rect x="697.7" y="565" width="2.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="700.66" y="575.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/node.rs:83) +0x2d (208 samples, 0.01%)</title><rect x="1159.8" y="469" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1162.81" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (31,744 samples, 2.11%)</title><rect x="1165.1" y="85" width="24.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1168.14" y="95.5" >a..</text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::write_to_log (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/iobuf.rs:788) +0x1b65 (2,304 samples, 0.15%)</title><rect x="1155.9" y="661" width="1.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1158.91" y="671.5" ></text>
</g>
<g >
<title>sled::lru::AccessQueue::push (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/lru.rs:82) +0xb8 (528 samples, 0.04%)</title><rect x="106.2" y="597" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="109.24" y="607.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::bulk_build_from_sorted_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/map.rs:1477) +0x5e (208 samples, 0.01%)</title><rect x="1159.3" y="517" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1162.33" y="527.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/boxed.rs:524) +0x50 (400 samples, 0.03%)</title><rect x="1159.5" y="389" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1162.50" y="399.5" ></text>
</g>
<g >
<title>tokio::runtime::context::runtime::enter_runtime (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/context/runtime.rs:65) +0xcd (31,744 samples, 2.11%)</title><rect x="1165.1" y="517" width="24.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1168.14" y="527.5" >t..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:1581) +0xbc (3,200 samples, 0.21%)</title><rect x="1122.9" y="613" width="2.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1125.91" y="623.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked_::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/thread/mod.rs:521) +0x2b9 (38,344 samples, 2.54%)</title><rect x="1160.0" y="917" width="30.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1162.97" y="927.5" >st..</text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1467) +0x42d (160 samples, 0.01%)</title><rect x="712.1" y="613" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="715.07" y="623.5" ></text>
</g>
<g >
<title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::initialize (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/sys/thread_local/native/lazy.rs:64) +0x73 (2,304 samples, 0.15%)</title><rect x="1155.9" y="533" width="1.8" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="1158.91" y="543.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:773) +0x1ca (3,200 samples, 0.21%)</title><rect x="697.7" y="533" width="2.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="700.66" y="543.5" ></text>
</g>
<g >
<title>std::rt::lang_start::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/rt.rs:164) +0x14 (1,463,208 samples, 97.11%)</title><rect x="10.0" y="901" width="1145.9" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.00" y="911.5" >std::rt::lang_start::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/rt.rs:164) +0x14</text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/slice.rs:138) +0x59 (680 samples, 0.05%)</title><rect x="710.3" y="565" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="713.27" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:267) +0x2e (640 samples, 0.04%)</title><rect x="1125.4" y="549" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1128.42" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (320 samples, 0.02%)</title><rect x="711.3" y="533" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="714.33" y="543.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1467) +0x42d (160 samples, 0.01%)</title><rect x="711.9" y="597" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="714.88" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:242) +0x1b (320 samples, 0.02%)</title><rect x="711.3" y="549" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="714.33" y="559.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::pull (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:2035) +0x17f2 (66,048 samples, 4.38%)</title><rect x="645.9" y="373" width="51.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="648.94" y="383.5" >sled:..</text>
</g>
<g >
<title>core::iter::adapters::try_process (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/mod.rs:160) +0x78 (19,200 samples, 1.27%)</title><rect x="106.7" y="309" width="15.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="109.72" y="319.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (680 samples, 0.05%)</title><rect x="710.8" y="485" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="713.80" y="495.5" ></text>
</g>
<g >
<title>sled::tree::Tree::split_node (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:1490) +0x839 (3,840 samples, 0.25%)</title><rect x="1122.9" y="645" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1125.91" y="655.5" ></text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/atomic.rs:200) +0x1b (2,072 samples, 0.14%)</title><rect x="1157.7" y="549" width="1.6" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1160.71" y="559.5" ></text>
</g>
<g >
<title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/panic/unwind_safe.rs:273) +0x31 (38,344 samples, 2.54%)</title><rect x="1160.0" y="869" width="30.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1162.97" y="879.5" >&lt;c..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/traits/iterator.rs:2404) +0x46 (70,176 samples, 4.66%)</title><rect x="121.8" y="181" width="54.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="124.75" y="191.5" >core:..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_extend.rs:18) +0x12 (66,048 samples, 4.38%)</title><rect x="645.9" y="501" width="51.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="648.94" y="511.5" >&lt;allo..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (5,440 samples, 0.36%)</title><rect x="703.5" y="597" width="4.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="706.52" y="607.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/harness.rs:209) +0x8a (31,744 samples, 2.11%)</title><rect x="1165.1" y="277" width="24.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1168.14" y="287.5" >t..</text>
</g>
<g >
<title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/boxed.rs:2231) +0x26 (5,256 samples, 0.35%)</title><rect x="1155.9" y="725" width="4.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1158.86" y="735.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:658) +0x4ad (3,200 samples, 0.21%)</title><rect x="697.7" y="549" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="700.66" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (160 samples, 0.01%)</title><rect x="1125.9" y="581" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1128.94" y="591.5" ></text>
</g>
<g >
<title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::bulk_build_from_sorted_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/map.rs:1479) +0x167 (608 samples, 0.04%)</title><rect x="1159.5" y="517" width="0.5" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1162.50" y="527.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/mod.rs:174) +0x1e (579,984 samples, 38.49%)</title><rect x="176.7" y="197" width="454.2" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="179.71" y="207.5" >&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits..</text>
</g>
<g >
<title>sled::pagecache::PageCache::replace (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1204) +0x1ce (524,656 samples, 34.82%)</title><rect x="712.0" y="629" width="410.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="715.04" y="639.5" >sled::pagecache::PageCache::replace (/root/.cargo/regist..</text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/convert/mod.rs:759) +0x1d (579,984 samples, 38.49%)</title><rect x="176.7" y="101" width="454.2" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="179.71" y="111.5" >&lt;T as core::convert::Into&lt;U&gt;&gt;::into (/rustc/f6e511eec7342f59a2..</text>
</g>
<g >
<title>sled::pagecache::PageCache::get (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1743) +0xd18 (3,168 samples, 0.21%)</title><rect x="707.8" y="629" width="2.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="710.78" y="639.5" ></text>
</g>
<g >
<title>proxy_cache::main::{{closure}} (/root/proxy-cache/src/main.rs:53) +0x9bb (6,144 samples, 0.41%)</title><rect x="1126.2" y="709" width="4.8" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1129.19" y="719.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:658) +0x4ad (3,200 samples, 0.21%)</title><rect x="700.2" y="549" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="703.17" y="559.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:478) +0x2f4 (320 samples, 0.02%)</title><rect x="711.6" y="565" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="714.58" y="575.5" ></text>
</g>
<g >
<title>core::iter::adapters::try_process (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/mod.rs:160) +0x89 (754,608 samples, 50.08%)</title><rect x="106.7" y="581" width="591.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="109.72" y="591.5" >core::iter::adapters::try_process (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b1..</text>
</g>
<g >
<title>sled::pagecache::PageCache::get (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1688) +0x1867 (616 samples, 0.04%)</title><rect x="106.2" y="629" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="109.24" y="639.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/node.rs:584) +0x11 (208 samples, 0.01%)</title><rect x="1159.8" y="485" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1162.81" y="495.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (208 samples, 0.01%)</title><rect x="1159.8" y="405" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1162.81" y="415.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:213) +0x43d (3,200 samples, 0.21%)</title><rect x="1122.9" y="533" width="2.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1125.91" y="543.5" ></text>
</g>
<g >
<title>&lt;sled::node::Node as sled::serialization::Serialize&gt;::deserialize (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/serialization.rs:461) +0x3de (688,560 samples, 45.70%)</title><rect x="106.7" y="389" width="539.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="109.72" y="399.5" >&lt;sled::node::Node as sled::serialization::Serialize&gt;::deserialize (/root/...</text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (2,072 samples, 0.14%)</title><rect x="1157.7" y="501" width="1.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1160.71" y="511.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:773) +0x1ca (3,200 samples, 0.21%)</title><rect x="700.2" y="533" width="2.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="703.17" y="543.5" ></text>
</g>
<g >
<title>crossbeam_epoch::collector::Collector::register (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/collector.rs:46) +0x11 (2,304 samples, 0.15%)</title><rect x="1155.9" y="485" width="1.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1158.91" y="495.5" ></text>
</g>
<g >
<title>tokio::runtime::runtime::Runtime::block_on (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/runtime.rs:342) +0x189 (1,463,208 samples, 97.11%)</title><rect x="10.0" y="837" width="1145.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="13.00" y="847.5" >tokio::runtime::runtime::Runtime::block_on (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/runtime.rs:342) +0x189</text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::sa_stabilize::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/iobuf.rs:474) +0xc2 (816 samples, 0.05%)</title><rect x="1159.3" y="613" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1162.33" y="623.5" ></text>
</g>
<g >
<title>sled::node::Node::apply (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/node.rs:75) +0x19c (6,400 samples, 0.42%)</title><rect x="697.7" y="613" width="5.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="700.66" y="623.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/boxed.rs:524) +0x50 (208 samples, 0.01%)</title><rect x="1159.8" y="437" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1162.81" y="447.5" ></text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::poll (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/raw.rs:202) +0x27 (31,744 samples, 2.11%)</title><rect x="1165.1" y="757" width="24.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1168.14" y="767.5" >t..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once{{vtable.shim}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/ops/function.rs:250) +0x12 (5,256 samples, 0.35%)</title><rect x="1155.9" y="709" width="4.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1158.86" y="719.5" ></text>
</g>
<g >
<title>tokio::runtime::blocking::pool::Task::run (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/blocking/pool.rs:162) +0x19 (31,744 samples, 2.11%)</title><rect x="1165.1" y="789" width="24.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1168.14" y="799.5" >t..</text>
</g>
<g >
<title>&lt;sled::ivec::IVec as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/ivec.rs:163) +0x3e (579,984 samples, 38.49%)</title><rect x="176.7" y="85" width="454.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="179.71" y="95.5" >&lt;sled::ivec::IVec as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (/root/..</text>
</g>
<g >
<title>crossbeam_epoch::default::HANDLE::__init (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/sys/thread_local/native/mod.rs:81) +0x13 (2,304 samples, 0.15%)</title><rect x="1155.9" y="501" width="1.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1158.91" y="511.5" ></text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/atomic.rs:200) +0x1b (2,304 samples, 0.15%)</title><rect x="1155.9" y="421" width="1.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1158.91" y="431.5" ></text>
</g>
<g >
<title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/panic/unwind_safe.rs:273) +0x22 (5,256 samples, 0.35%)</title><rect x="1155.9" y="869" width="4.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1158.86" y="879.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::HANDLE::{{constant}}::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/sys/thread_local/native/mod.rs:94) +0x34 (2,304 samples, 0.15%)</title><rect x="1155.9" y="565" width="1.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1158.91" y="575.5" ></text>
</g>
<g >
<title>sled::node::Node::split::split_inner (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/node.rs:222) +0x7dd (320 samples, 0.02%)</title><rect x="711.6" y="613" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="714.58" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (320 samples, 0.02%)</title><rect x="711.3" y="517" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="714.33" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (208 samples, 0.01%)</title><rect x="1159.3" y="405" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1162.33" y="415.5" ></text>
</g>
<g >
<title>proxy_cache::main::{{closure}} (/root/proxy-cache/src/main.rs:67) +0x617 (31,744 samples, 2.11%)</title><rect x="1131.0" y="709" width="24.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1134.00" y="719.5" >p..</text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::push_internal_level::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/node.rs:594) +0x19 (400 samples, 0.03%)</title><rect x="1159.5" y="453" width="0.3" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1162.50" y="463.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:3089) +0x3f (66,048 samples, 4.38%)</title><rect x="645.9" y="485" width="51.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="648.94" y="495.5" >alloc..</text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/mod.rs:191) +0x38 (70,176 samples, 4.66%)</title><rect x="121.8" y="213" width="54.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="124.75" y="223.5" >&lt;core..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:425) +0x5a (680 samples, 0.05%)</title><rect x="710.8" y="549" width="0.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="713.80" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (1,088 samples, 0.07%)</title><rect x="702.7" y="549" width="0.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="705.67" y="559.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:3089) +0x3f (579,984 samples, 38.49%)</title><rect x="176.7" y="213" width="454.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="179.71" y="223.5" >alloc::vec::Vec&lt;T,A&gt;::extend_desugared (/rustc/f6e511eec7342f5..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/thread/local.rs:283) +0xd3 (31,744 samples, 2.11%)</title><rect x="1165.1" y="453" width="24.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1168.14" y="463.5" >s..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:478) +0x2f4 (320 samples, 0.02%)</title><rect x="711.3" y="565" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="714.33" y="575.5" ></text>
</g>
<g >
<title>&lt;sled::serialization::ConsumeSequence&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/serialization.rs:802) +0x75 (70,176 samples, 4.66%)</title><rect x="121.8" y="165" width="54.9" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="124.75" y="175.5" >&lt;sled..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:554) +0x22 (19,200 samples, 1.27%)</title><rect x="630.9" y="181" width="15.0" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="633.90" y="191.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::push (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:2009) +0x6b (6,144 samples, 0.41%)</title><rect x="1126.2" y="693" width="4.8" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1129.19" y="703.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (3,168 samples, 0.21%)</title><rect x="707.8" y="517" width="2.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="710.78" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:330) +0x4a (31,744 samples, 2.11%)</title><rect x="1165.1" y="101" width="24.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1168.14" y="111.5" >a..</text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/harness.rs:154) +0x19 (31,744 samples, 2.11%)</title><rect x="1165.1" y="725" width="24.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1168.14" y="735.5" >t..</text>
</g>
<g >
<title>alloc::collections::btree::mem::replace (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/mem.rs:27) +0x2b (400 samples, 0.03%)</title><rect x="1159.5" y="485" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1162.50" y="495.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_from_iter_nested.rs:24) +0x60 (688,560 samples, 45.70%)</title><rect x="106.7" y="517" width="539.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="109.72" y="527.5" >&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNest..</text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (400 samples, 0.03%)</title><rect x="1159.5" y="341" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1162.50" y="351.5" ></text>
</g>
<g >
<title>sled::threadpool::spawn::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/threadpool.rs:205) +0x2d (5,256 samples, 0.35%)</title><rect x="1155.9" y="693" width="4.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1158.86" y="703.5" ></text>
</g>
<g >
<title>sled::flusher::run (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/flusher.rs:110) +0x409 (6,216 samples, 0.41%)</title><rect x="1160.0" y="805" width="4.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1162.97" y="815.5" ></text>
</g>
<g >
<title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/convert/mod.rs:759) +0x1d (70,176 samples, 4.66%)</title><rect x="121.8" y="133" width="54.9" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="124.75" y="143.5" >&lt;T as..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (680 samples, 0.05%)</title><rect x="710.8" y="501" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="713.80" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:267) +0x2e (3,200 samples, 0.21%)</title><rect x="697.7" y="517" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="700.66" y="527.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/map.rs:121) +0x3c (66,048 samples, 4.38%)</title><rect x="645.9" y="437" width="51.8" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="648.94" y="447.5" >&lt;core..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/scheduler/multi_thread/worker.rs:506) +0x13f (31,744 samples, 2.11%)</title><rect x="1165.1" y="501" width="24.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1168.14" y="511.5" >t..</text>
</g>
<g >
<title>sled::pagecache::PageCache::allocate_inner (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:830) +0x6a2 (240 samples, 0.02%)</title><rect x="711.9" y="613" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="714.86" y="623.5" ></text>
</g>
<g >
<title>sled::tree::Tree::split_node (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:1463) +0x34c (272 samples, 0.02%)</title><rect x="711.8" y="645" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="714.83" y="655.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:658) +0x4ad (6,144 samples, 0.41%)</title><rect x="1126.2" y="661" width="4.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1129.19" y="671.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::attempt_gc (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:873) +0x1a5 (6,216 samples, 0.41%)</title><rect x="1160.0" y="789" width="4.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1162.97" y="799.5" ></text>
</g>
<g >
<title>__rust_try +0x1d (5,256 samples, 0.35%)</title><rect x="1155.9" y="789" width="4.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1158.86" y="799.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:330) +0x4a (1,088 samples, 0.07%)</title><rect x="702.7" y="565" width="0.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="705.67" y="575.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/result.rs:1958) +0x28 (754,608 samples, 50.08%)</title><rect x="106.7" y="597" width="591.0" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.72" y="607.5" >&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::res..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (6,216 samples, 0.41%)</title><rect x="1160.0" y="645" width="4.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1162.97" y="655.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::poll_future (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/harness.rs:505) +0x73 (31,744 samples, 2.11%)</title><rect x="1165.1" y="261" width="24.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1168.14" y="271.5" >t..</text>
</g>
<g >
<title>tokio::runtime::context::set_scheduler::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/context.rs:180) +0x2c (31,744 samples, 2.11%)</title><rect x="1165.1" y="437" width="24.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1168.14" y="447.5" >t..</text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/atomic.rs:200) +0x1b (6,216 samples, 0.41%)</title><rect x="1160.0" y="677" width="4.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1162.97" y="687.5" ></text>
</g>
<g >
<title>tokio::runtime::runtime::Runtime::block_on_inner (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/runtime.rs:370) +0x144 (1,463,208 samples, 97.11%)</title><rect x="10.0" y="821" width="1145.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.00" y="831.5" >tokio::runtime::runtime::Runtime::block_on_inner (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/runtime.rs:370) +0x144</text>
</g>
<g >
<title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/panic/unwind_safe.rs:273) +0x22 (31,744 samples, 2.11%)</title><rect x="1165.1" y="197" width="24.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1168.14" y="207.5" >&lt;..</text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/node.rs:584) +0x11 (208 samples, 0.01%)</title><rect x="1159.3" y="501" width="0.2" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1162.33" y="511.5" ></text>
</g>
<g >
<title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/context/blocking.rs:66) +0x79 (1,463,208 samples, 97.11%)</title><rect x="10.0" y="757" width="1145.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="13.00" y="767.5" >tokio::runtime::context::blocking::BlockingRegionGuard::block_on (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/context/b..</text>
</g>
<g >
<title>sled::pin (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/lib.rs:356) +0x15 (2,304 samples, 0.15%)</title><rect x="1155.9" y="645" width="1.8" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1158.91" y="655.5" ></text>
</g>
<g >
<title>sled::threadpool::perform_work (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/threadpool.rs:103) +0x13f (5,256 samples, 0.35%)</title><rect x="1155.9" y="741" width="4.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1158.86" y="751.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1467) +0x42d (160 samples, 0.01%)</title><rect x="1125.9" y="613" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1128.94" y="623.5" ></text>
</g>
<g >
<title>sled::flusher::Flusher::new::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/flusher.rs:48) +0x23 (6,600 samples, 0.44%)</title><rect x="1160.0" y="821" width="5.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="1162.97" y="831.5" ></text>
</g>
<g >
<title>&lt;sled::ivec::IVec as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/ivec.rs:163) +0x3e (66,048 samples, 4.38%)</title><rect x="645.9" y="309" width="51.8" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="648.94" y="319.5" >&lt;sled..</text>
</g>
<g >
<title>sled::lru::Lru::accessed (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/lru.rs:253) +0x1a5 (528 samples, 0.04%)</title><rect x="106.2" y="613" width="0.4" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="109.24" y="623.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/iobuf.rs:1123) +0x105b (524,288 samples, 34.79%)</title><rect x="712.2" y="565" width="410.6" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="715.19" y="575.5" >sled::pagecache::iobuf::maybe_seal_and_write_iobuf (/ro..</text>
</g>
<g >
<title>proxy_cache::LargeData::new (/root/proxy-cache/src/main.rs:14) +0x28 (122,880 samples, 8.15%)</title><rect x="10.0" y="693" width="96.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="13.00" y="703.5" >proxy_cache..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:349) +0x39 (3,200 samples, 0.21%)</title><rect x="1122.9" y="597" width="2.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1125.91" y="607.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::flush (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/internal.rs) +0x4e (2,072 samples, 0.14%)</title><rect x="1157.7" y="629" width="1.6" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1160.71" y="639.5" ></text>
</g>
<g >
<title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::from_sorted_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/set.rs:1377) +0x5d (816 samples, 0.05%)</title><rect x="1159.3" y="533" width="0.7" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1162.33" y="543.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/scheduler/multi_thread/mod.rs:87) +0x40 (1,463,208 samples, 97.11%)</title><rect x="10.0" y="773" width="1145.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.00" y="783.5" >tokio::runtime::scheduler::multi_thread::MultiThread::block_on::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtim..</text>
</g>
<g >
<title>__rust_try +0x1d (31,744 samples, 2.11%)</title><rect x="1165.1" y="229" width="24.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1168.14" y="239.5" >_..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (160 samples, 0.01%)</title><rect x="712.1" y="581" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="715.07" y="591.5" ></text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::with (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/thread/local.rs:260) +0x12 (31,744 samples, 2.11%)</title><rect x="1165.1" y="469" width="24.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1168.14" y="479.5" >s..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:330) +0x4a (6,216 samples, 0.41%)</title><rect x="1160.0" y="661" width="4.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1162.97" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:425) +0x5a (680 samples, 0.05%)</title><rect x="710.3" y="549" width="0.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="713.27" y="559.5" ></text>
</g>
<g >
<title>sled::pagecache::logger::Log::reserve_inner (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/logger.rs:292) +0x20f6 (524,312 samples, 34.80%)</title><rect x="712.2" y="581" width="410.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="715.19" y="591.5" >sled::pagecache::logger::Log::reserve_inner (/root/.car..</text>
</g>
<g >
<title>std::panic::catch_unwind (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/panic.rs:345) +0x2f (5,256 samples, 0.35%)</title><rect x="1155.9" y="805" width="4.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1158.86" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:478) +0x2f4 (680 samples, 0.05%)</title><rect x="710.8" y="533" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="713.80" y="543.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/panicking.rs:556) +0x31 (5,256 samples, 0.35%)</title><rect x="1155.9" y="885" width="4.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1158.86" y="895.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:242) +0x1b (680 samples, 0.05%)</title><rect x="710.3" y="517" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="713.27" y="527.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::cas_page (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1482) +0x8cf (524,312 samples, 34.80%)</title><rect x="712.2" y="613" width="410.6" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="715.19" y="623.5" >sled::pagecache::PageCache::cas_page (/root/.cargo/regi..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_extend.rs:18) +0x12 (599,184 samples, 39.77%)</title><rect x="176.7" y="229" width="469.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="179.71" y="239.5" >&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I..</text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (66,048 samples, 4.38%)</title><rect x="645.9" y="261" width="51.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="648.94" y="271.5" >alloc..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_from_iter.rs) +0x15 (19,200 samples, 1.27%)</title><rect x="106.7" y="261" width="15.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="109.72" y="271.5" ></text>
</g>
<g >
<title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/blocking/pool.rs:469) +0x9a (31,744 samples, 2.11%)</title><rect x="1165.1" y="821" width="24.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1168.14" y="831.5" >t..</text>
</g>
<g >
<title>crossbeam_epoch::guard::Guard::flush (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/guard.rs:296) +0x47 (6,216 samples, 0.41%)</title><rect x="1160.0" y="773" width="4.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1162.97" y="783.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (31,744 samples, 2.11%)</title><rect x="1165.1" y="69" width="24.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1168.14" y="79.5" >a..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:213) +0x43d (6,144 samples, 0.41%)</title><rect x="1126.2" y="613" width="4.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1129.19" y="623.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::with_handle (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/default.rs:59) +0x1c (2,304 samples, 0.15%)</title><rect x="1155.9" y="613" width="1.8" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1158.91" y="623.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/iobuf.rs:1184) +0x86 (5,256 samples, 0.35%)</title><rect x="1155.9" y="677" width="4.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1158.86" y="687.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/node.rs:83) +0x2d (208 samples, 0.01%)</title><rect x="1159.3" y="485" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1162.33" y="495.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:478) +0x2f4 (680 samples, 0.05%)</title><rect x="710.3" y="533" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="713.27" y="543.5" ></text>
</g>
<g >
<title>sled::flusher::run (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/flusher.rs:68) +0x1fe (384 samples, 0.03%)</title><rect x="1164.8" y="805" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1167.84" y="815.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:478) +0x2f4 (3,168 samples, 0.21%)</title><rect x="707.8" y="565" width="2.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="710.78" y="575.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::poll_future (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/harness.rs:505) +0x74 (31,744 samples, 2.11%)</title><rect x="1165.1" y="693" width="24.9" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1168.14" y="703.5" >t..</text>
</g>
<g >
<title>tokio::runtime::task::raw::poll (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/raw.rs:272) +0x1f (31,744 samples, 2.11%)</title><rect x="1165.1" y="741" width="24.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1168.14" y="751.5" >t..</text>
</g>
<g >
<title>std::sys::backtrace::__rust_begin_short_backtrace (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/sys/backtrace.rs:160) +0xd (38,344 samples, 2.54%)</title><rect x="1160.0" y="837" width="30.0" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1162.97" y="847.5" >st..</text>
</g>
<g >
<title>sled::arc::Arc&lt;T&gt;::copy_from_slice (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/arc.rs:59) +0x1f7 (70,176 samples, 4.66%)</title><rect x="121.8" y="85" width="54.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="124.75" y="95.5" >sled:..</text>
</g>
<g >
<title>&lt;sled::Link as sled::serialization::Serialize&gt;::deserialize (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/serialization.rs:387) +0x2a8 (66,048 samples, 4.38%)</title><rect x="645.9" y="357" width="51.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="648.94" y="367.5" >&lt;sled..</text>
</g>
<g >
<title>tokio::runtime::park::CachedParkThread::block_on (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/park.rs:281) +0x2a8 (1,463,208 samples, 97.11%)</title><rect x="10.0" y="741" width="1145.9" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >tokio::runtime::park::CachedParkThread::block_on (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/park.rs:281) +0x2a8</text>
</g>
<g >
<title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::deserialize (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/serialization.rs:600) +0x34f (669,360 samples, 44.42%)</title><rect x="121.8" y="373" width="524.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="124.75" y="383.5" >&lt;sled::node::Data as sled::serialization::Serialize&gt;::deserialize (/root..</text>
</g>
<g >
<title>sled::tree::Tree::view_for_pid (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:1578) +0x75 (771,320 samples, 51.19%)</title><rect x="106.2" y="645" width="604.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="109.24" y="655.5" >sled::tree::Tree::view_for_pid (/root/.cargo/registry/src/index.crates.io-6f17d22bb..</text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:773) +0x1ca (3,200 samples, 0.21%)</title><rect x="1122.9" y="565" width="2.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1125.91" y="575.5" ></text>
</g>
<g >
<title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/context/scoped.rs:40) +0x90 (31,744 samples, 2.11%)</title><rect x="1165.1" y="421" width="24.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1168.14" y="431.5" >t..</text>
</g>
<g >
<title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_from_elem.rs:51) +0x6c (31,744 samples, 2.11%)</title><rect x="1131.0" y="677" width="24.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1134.00" y="687.5" >&lt;..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:480) +0x31e (122,880 samples, 8.15%)</title><rect x="10.0" y="645" width="96.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >alloc::raw_..</text>
</g>
<g >
<title>std::sys::backtrace::__rust_begin_short_backtrace (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/sys/backtrace.rs:160) +0x11 (1,463,208 samples, 97.11%)</title><rect x="10.0" y="885" width="1145.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="13.00" y="895.5" >std::sys::backtrace::__rust_begin_short_backtrace (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/sys/backtrace.rs:160) +0x11</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (400 samples, 0.03%)</title><rect x="1159.5" y="357" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1162.50" y="367.5" ></text>
</g>
<g >
<title>core::iter::adapters::map::map_try_fold::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/map.rs:95) +0x3c (688,560 samples, 45.70%)</title><rect x="106.7" y="437" width="539.2" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="109.72" y="447.5" >core::iter::adapters::map::map_try_fold::{{closure}} (/rustc/f6e511eec7342..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:974) +0x9d (19,200 samples, 1.27%)</title><rect x="630.9" y="197" width="15.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="633.90" y="207.5" ></text>
</g>
<g >
<title>sled::pagecache::segment::SegmentAccountant::deactivate_segment (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/segment.rs:947) +0x339 (816 samples, 0.05%)</title><rect x="1159.3" y="581" width="0.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1162.33" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:2985) +0x28 (19,200 samples, 1.27%)</title><rect x="106.7" y="277" width="15.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="109.72" y="287.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::write_to_log (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/iobuf.rs:800) +0x1cbe (816 samples, 0.05%)</title><rect x="1159.3" y="661" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1162.33" y="671.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:773) +0x1ca (19,200 samples, 1.27%)</title><rect x="106.7" y="149" width="15.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="109.72" y="159.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:480) +0x31e (31,744 samples, 2.11%)</title><rect x="1131.0" y="661" width="24.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1134.00" y="671.5" >a..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:242) +0x1b (208 samples, 0.01%)</title><rect x="1159.3" y="437" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1162.33" y="447.5" ></text>
</g>
<g >
<title>sled::node::Node::split::split_inner (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/node.rs:179) +0x118 (320 samples, 0.02%)</title><rect x="711.3" y="613" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="714.33" y="623.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:247) +0x1e (31,744 samples, 2.11%)</title><rect x="1131.0" y="645" width="24.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1134.00" y="655.5" >&lt;..</text>
</g>
<g >
<title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_from_elem.rs:51) +0x6c (122,880 samples, 8.15%)</title><rect x="10.0" y="661" width="96.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >&lt;u8 as allo..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:242) +0x1b (3,168 samples, 0.21%)</title><rect x="707.8" y="549" width="2.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="710.78" y="559.5" ></text>
</g>
<g >
<title>sled::tree::Tree::split_node (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:1459) +0xf1 (640 samples, 0.04%)</title><rect x="711.3" y="645" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="714.33" y="655.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:2851) +0x96 (680 samples, 0.05%)</title><rect x="710.3" y="581" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="713.27" y="591.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:213) +0x43d (19,200 samples, 1.27%)</title><rect x="630.9" y="117" width="15.0" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="633.90" y="127.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::maybe_seal_and_write_iobuf (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/iobuf.rs:1160) +0x16cd (384 samples, 0.03%)</title><rect x="1164.8" y="757" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1167.84" y="767.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::run (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/scheduler/multi_thread/worker.rs:498) +0x26e (31,744 samples, 2.11%)</title><rect x="1165.1" y="533" width="24.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1168.14" y="543.5" >t..</text>
</g>
<g >
<title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::push (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/sync/queue.rs:99) +0xad (2,072 samples, 0.14%)</title><rect x="1157.7" y="597" width="1.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1160.71" y="607.5" ></text>
</g>
<g >
<title>&lt;sled::node::Data as sled::serialization::Serialize&gt;::deserialize (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/serialization.rs:599) +0x27d (19,200 samples, 1.27%)</title><rect x="106.7" y="373" width="15.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="109.72" y="383.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked_::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/thread/mod.rs:521) +0x1cb (5,256 samples, 0.35%)</title><rect x="1155.9" y="917" width="4.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1158.86" y="927.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_from_iter_nested.rs:24) +0x60 (70,176 samples, 4.66%)</title><rect x="121.8" y="245" width="54.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="124.75" y="255.5" >&lt;allo..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:1581) +0xbc (3,200 samples, 0.21%)</title><rect x="700.2" y="581" width="2.5" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="703.17" y="591.5" ></text>
</g>
<g >
<title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/blocking/task.rs:42) +0x86 (31,744 samples, 2.11%)</title><rect x="1165.1" y="565" width="24.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1168.14" y="575.5" >&lt;..</text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (160 samples, 0.01%)</title><rect x="1125.9" y="565" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1128.94" y="575.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::sa_stabilize (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/iobuf.rs:470) +0x40 (816 samples, 0.05%)</title><rect x="1159.3" y="645" width="0.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1162.33" y="655.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (579,984 samples, 38.49%)</title><rect x="176.7" y="37" width="454.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="179.71" y="47.5" >alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00..</text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (1,088 samples, 0.07%)</title><rect x="702.7" y="533" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="705.67" y="543.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/boxed.rs:486) +0x3d (208 samples, 0.01%)</title><rect x="1159.8" y="453" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1162.81" y="463.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/result.rs:1958) +0x24 (754,608 samples, 50.08%)</title><rect x="106.7" y="565" width="591.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="109.72" y="575.5" >&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::res..</text>
</g>
<g >
<title>&lt;sled::node::Node as core::clone::Clone&gt;::clone (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/node.rs:13) +0xe5 (1,360 samples, 0.09%)</title><rect x="710.3" y="629" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="713.27" y="639.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/atomic.rs:1133) +0xa (2,072 samples, 0.14%)</title><rect x="1157.7" y="581" width="1.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1160.71" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::park::CachedParkThread::block_on::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/park.rs:281) +0x2d (1,463,208 samples, 97.11%)</title><rect x="10.0" y="725" width="1145.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.00" y="735.5" >tokio::runtime::park::CachedParkThread::block_on::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/park.rs:281)..</text>
</g>
<g >
<title>sled::tree::Tree::view_for_key (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:1674) +0x80b (531,112 samples, 35.25%)</title><rect x="710.3" y="661" width="415.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="713.27" y="671.5" >sled::tree::Tree::view_for_key (/root/.cargo/registry/sr..</text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (70,176 samples, 4.66%)</title><rect x="121.8" y="69" width="54.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="124.75" y="79.5" >alloc..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:2985) +0x28 (754,608 samples, 50.08%)</title><rect x="106.7" y="549" width="591.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="109.72" y="559.5" >&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (..</text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:330) +0x4a (384 samples, 0.03%)</title><rect x="1164.8" y="725" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1167.84" y="735.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:213) +0x43d (3,200 samples, 0.21%)</title><rect x="697.7" y="501" width="2.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="700.66" y="511.5" ></text>
</g>
<g >
<title>sled::serialization::deserialize_bounded_sequence (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/serialization.rs:789) +0x3d (669,360 samples, 44.42%)</title><rect x="121.8" y="357" width="524.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="124.75" y="367.5" >sled::serialization::deserialize_bounded_sequence (/root/.cargo/registry..</text>
</g>
<g >
<title>sled::node::Node::split (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/node.rs:268) +0x4c1 (640 samples, 0.04%)</title><rect x="711.3" y="629" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="714.33" y="639.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:658) +0x4ad (3,200 samples, 0.21%)</title><rect x="1122.9" y="581" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1125.91" y="591.5" ></text>
</g>
<g >
<title>crossbeam_epoch::default::pin (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/default.rs:41) +0xa (2,304 samples, 0.15%)</title><rect x="1155.9" y="629" width="1.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1158.91" y="639.5" ></text>
</g>
<g >
<title>sled::pagecache::logger::Log::roll_iobuf (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/logger.rs:47) +0x1c (384 samples, 0.03%)</title><rect x="1164.8" y="789" width="0.3" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="1167.84" y="799.5" ></text>
</g>
<g >
<title>__rust_try +0x1d (38,344 samples, 2.54%)</title><rect x="1160.0" y="901" width="30.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1162.97" y="911.5" >__..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:3093) +0x1df (19,200 samples, 1.27%)</title><rect x="106.7" y="213" width="15.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="109.72" y="223.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/atomic.rs:1147) +0xa (6,216 samples, 0.41%)</title><rect x="1160.0" y="693" width="4.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1162.97" y="703.5" ></text>
</g>
<g >
<title>&lt;sled::node::Data as core::clone::Clone&gt;::clone (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/node.rs:650) +0x80 (1,360 samples, 0.09%)</title><rect x="710.3" y="613" width="1.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="713.27" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (320 samples, 0.02%)</title><rect x="711.6" y="517" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="714.58" y="527.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/mod.rs:191) +0x38 (688,560 samples, 45.70%)</title><rect x="106.7" y="485" width="539.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="109.72" y="495.5" >&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::..</text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::register (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/internal.rs:320) +0x25c (2,304 samples, 0.15%)</title><rect x="1155.9" y="469" width="1.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1158.91" y="479.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/boxed.rs:486) +0x3d (400 samples, 0.03%)</title><rect x="1159.5" y="405" width="0.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1162.50" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:773) +0x1ca (640 samples, 0.04%)</title><rect x="1125.4" y="565" width="0.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1128.42" y="575.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/atomic.rs:1147) +0xa (2,304 samples, 0.15%)</title><rect x="1155.9" y="437" width="1.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1158.91" y="447.5" ></text>
</g>
<g >
<title>&lt;sled::arc::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/arc.rs:166) +0x19 (70,176 samples, 4.66%)</title><rect x="121.8" y="101" width="54.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="124.75" y="111.5" >&lt;sled..</text>
</g>
<g >
<title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/mod.rs:472) +0x36 (31,744 samples, 2.11%)</title><rect x="1165.1" y="773" width="24.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1168.14" y="783.5" >t..</text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (680 samples, 0.05%)</title><rect x="710.3" y="485" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="713.27" y="495.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (160 samples, 0.01%)</title><rect x="711.9" y="549" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="714.88" y="559.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (384 samples, 0.03%)</title><rect x="1164.8" y="709" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1167.84" y="719.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:242) +0x1b (400 samples, 0.03%)</title><rect x="1159.5" y="373" width="0.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1162.50" y="383.5" ></text>
</g>
<g >
<title>sled::pagecache::logger::Log::reserve (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/logger.rs:149) +0x47 (524,312 samples, 34.80%)</title><rect x="712.2" y="597" width="410.6" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="715.19" y="607.5" >sled::pagecache::logger::Log::reserve (/root/.cargo/reg..</text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/mod.rs:191) +0x38 (579,984 samples, 38.49%)</title><rect x="176.7" y="181" width="454.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="179.71" y="191.5" >&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits..</text>
</g>
<g >
<title>&lt;T as crossbeam_epoch::atomic::Pointable&gt;::init (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/atomic.rs:200) +0x1b (1,088 samples, 0.07%)</title><rect x="702.7" y="581" width="0.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="705.67" y="591.5" ></text>
</g>
<g >
<title>sled::arc::Arc&lt;T&gt;::copy_from_slice (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/arc.rs:59) +0x1f7 (579,984 samples, 38.49%)</title><rect x="176.7" y="53" width="454.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="179.71" y="63.5" >sled::arc::Arc&lt;T&gt;::copy_from_slice (/root/.cargo/registry/src/..</text>
</g>
<g >
<title>sled::arc::Arc&lt;T&gt;::new (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/arc.rs:39) +0xbf (384 samples, 0.03%)</title><rect x="1164.8" y="741" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1167.84" y="751.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/core.rs:320) +0x3c (31,744 samples, 2.11%)</title><rect x="1165.1" y="597" width="24.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1168.14" y="607.5" >t..</text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (160 samples, 0.01%)</title><rect x="712.1" y="565" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="715.07" y="575.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:330) +0x4a (5,440 samples, 0.36%)</title><rect x="703.5" y="613" width="4.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="706.52" y="623.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::poll_future::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/harness.rs) +0x37 (31,744 samples, 2.11%)</title><rect x="1165.1" y="181" width="24.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1168.14" y="191.5" >t..</text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::with_sa (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/iobuf.rs:493) +0x1c3 (816 samples, 0.05%)</title><rect x="1159.3" y="629" width="0.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1162.33" y="639.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::insert (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:1581) +0xc6 (640 samples, 0.04%)</title><rect x="1125.4" y="613" width="0.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1128.42" y="623.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:773) +0x1ca (6,144 samples, 0.41%)</title><rect x="1126.2" y="645" width="4.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1129.19" y="655.5" ></text>
</g>
<g >
<title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/append.rs:76) +0x375 (208 samples, 0.01%)</title><rect x="1159.8" y="501" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1162.81" y="511.5" ></text>
</g>
<g >
<title>std::sys::backtrace::__rust_begin_short_backtrace (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/sys/backtrace.rs:160) +0x1e (5,256 samples, 0.35%)</title><rect x="1155.9" y="837" width="4.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="1158.86" y="847.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:425) +0x5a (320 samples, 0.02%)</title><rect x="711.6" y="581" width="0.2" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="714.58" y="591.5" ></text>
</g>
<g >
<title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::deserialize (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/serialization.rs:137) +0x1d8 (70,176 samples, 4.66%)</title><rect x="121.8" y="149" width="54.9" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="124.75" y="159.5" >&lt;sled..</text>
</g>
<g >
<title>std::sys::pal::unix::thread::Thread::new::thread_start (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/sys/pal/unix/thread.rs:105) +0x2b (43,600 samples, 2.89%)</title><rect x="1155.9" y="949" width="34.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1158.86" y="959.5" >st..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:658) +0x4ad (640 samples, 0.04%)</title><rect x="1125.4" y="581" width="0.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1128.42" y="591.5" ></text>
</g>
<g >
<title>wakeup_vcpus_on_cpu	[kvm_intel] (1,506,808 samples, 100.00%)</title><rect x="10.0" y="965" width="1180.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="13.00" y="975.5" >wakeup_vcpus_on_cpu	[kvm_intel]</text>
</g>
<g >
<title>__rust_try +0x1d (5,256 samples, 0.35%)</title><rect x="1155.9" y="901" width="4.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1158.86" y="911.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:330) +0x4a (2,304 samples, 0.15%)</title><rect x="1155.9" y="405" width="1.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1158.91" y="415.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:658) +0x4ad (19,200 samples, 1.27%)</title><rect x="106.7" y="165" width="15.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="109.72" y="175.5" ></text>
</g>
<g >
<title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::deserialize (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/serialization.rs:137) +0x1d8 (579,984 samples, 38.49%)</title><rect x="176.7" y="117" width="454.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="179.71" y="127.5" >&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::deserial..</text>
</g>
<g >
<title>&lt;sled::ivec::IVec as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/ivec.rs:163) +0x3e (70,176 samples, 4.66%)</title><rect x="121.8" y="117" width="54.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="124.75" y="127.5" >&lt;sled..</text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (2,304 samples, 0.15%)</title><rect x="1155.9" y="373" width="1.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1158.91" y="383.5" ></text>
</g>
<g >
<title>core::iter::adapters::try_process (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/mod.rs:160) +0x78 (669,360 samples, 44.42%)</title><rect x="121.8" y="309" width="524.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="124.75" y="319.5" >core::iter::adapters::try_process (/rustc/f6e511eec7342f59a25f7c0534f1db..</text>
</g>
<g >
<title>&lt;sled::serialization::ConsumeSequence&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/serialization.rs:802) +0x75 (579,984 samples, 38.49%)</title><rect x="176.7" y="133" width="454.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="179.71" y="143.5" >&lt;sled::serialization::ConsumeSequence&lt;T&gt; as core::iter::traits..</text>
</g>
<g >
<title>std::thread::local::LocalKey&lt;T&gt;::try_with (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/thread/local.rs:282) +0x27 (2,304 samples, 0.15%)</title><rect x="1155.9" y="597" width="1.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1158.91" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (524,288 samples, 34.79%)</title><rect x="712.2" y="533" width="410.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="715.19" y="543.5" >alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f..</text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/harness.rs:154) +0x15 (31,744 samples, 2.11%)</title><rect x="1165.1" y="293" width="24.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1168.14" y="303.5" >t..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once{{vtable.shim}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/ops/function.rs:250) +0x12 (43,600 samples, 2.89%)</title><rect x="1155.9" y="933" width="34.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1158.86" y="943.5" >co..</text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (5,440 samples, 0.36%)</title><rect x="703.5" y="581" width="4.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="706.52" y="591.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/scheduler/multi_thread/worker.rs:511) +0x60 (31,744 samples, 2.11%)</title><rect x="1165.1" y="405" width="24.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1168.14" y="415.5" >t..</text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/mod.rs:174) +0x2a (688,560 samples, 45.70%)</title><rect x="106.7" y="501" width="539.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="109.72" y="511.5" >&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/scheduler/multi_thread/worker.rs:464) +0x12 (31,744 samples, 2.11%)</title><rect x="1165.1" y="549" width="24.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1168.14" y="559.5" >t..</text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/atomic.rs:1147) +0xa (2,072 samples, 0.14%)</title><rect x="1157.7" y="565" width="1.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1160.71" y="575.5" ></text>
</g>
<g >
<title>sled::pagecache::segment::SegmentAccountant::stabilize (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/segment.rs:923) +0x569 (816 samples, 0.05%)</title><rect x="1159.3" y="597" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1162.33" y="607.5" ></text>
</g>
<g >
<title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/append.rs:68) +0x34c (400 samples, 0.03%)</title><rect x="1159.5" y="501" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1162.50" y="511.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_from_iter.rs) +0x15 (754,608 samples, 50.08%)</title><rect x="106.7" y="533" width="591.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="109.72" y="543.5" >&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter ..</text>
</g>
<g >
<title>sled::pagecache::PageCache::get (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1716) +0x91a (754,608 samples, 50.08%)</title><rect x="106.7" y="629" width="591.0" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="109.72" y="639.5" >sled::pagecache::PageCache::get (/root/.cargo/registry/src/index.crates.io-6f17d2..</text>
</g>
<g >
<title>sled::tree::Tree::insert (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:164) +0x387 (1,302,432 samples, 86.44%)</title><rect x="106.2" y="693" width="1020.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="109.24" y="703.5" >sled::tree::Tree::insert (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:164) +0x387</text>
</g>
<g >
<title>main +0x21 (1,463,208 samples, 97.11%)</title><rect x="10.0" y="949" width="1145.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.00" y="959.5" >main +0x21</text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/slice.rs:138) +0x59 (680 samples, 0.05%)</title><rect x="710.8" y="565" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="713.80" y="575.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:425) +0x5a (320 samples, 0.02%)</title><rect x="711.3" y="581" width="0.3" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="714.33" y="591.5" ></text>
</g>
<g >
<title>&lt;&amp;alloc::collections::btree::set::BTreeSet&lt;T,A&gt; as core::ops::arith::Sub&lt;&amp;alloc::collections::btree::set::BTreeSet&lt;T,A&gt;&gt;&gt;::sub (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/set.rs:1541) +0x7c (816 samples, 0.05%)</title><rect x="1159.3" y="549" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1162.33" y="559.5" ></text>
</g>
<g >
<title>alloc::collections::btree::mem::take_mut::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/mem.rs:10) +0x19 (400 samples, 0.03%)</title><rect x="1159.5" y="469" width="0.3" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1162.50" y="479.5" ></text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/thread/mod.rs:523) +0x31 (38,344 samples, 2.54%)</title><rect x="1160.0" y="853" width="30.0" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1162.97" y="863.5" >st..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:267) +0x2e (6,144 samples, 0.41%)</title><rect x="1126.2" y="629" width="4.8" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1129.19" y="639.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::get::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1719) +0x4e (688,560 samples, 45.70%)</title><rect x="106.7" y="421" width="539.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="109.72" y="431.5" >sled::pagecache::PageCache::get::{{closure}} (/root/.cargo/registry/src/in..</text>
</g>
<g >
<title>sled::pagecache::PageCache::replace (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1204) +0x1ce (344 samples, 0.02%)</title><rect x="1125.9" y="629" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1128.92" y="639.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:213) +0x43d (640 samples, 0.04%)</title><rect x="1125.4" y="533" width="0.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1128.42" y="543.5" ></text>
</g>
<g >
<title>sled::tree::Tree::insert_inner (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:184) +0x1a9 (1,302,432 samples, 86.44%)</title><rect x="106.2" y="677" width="1020.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="109.24" y="687.5" >sled::tree::Tree::insert_inner (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:184) +0x1a9</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/scheduler/multi_thread/worker.rs:597) +0x3a (31,744 samples, 2.11%)</title><rect x="1165.1" y="357" width="24.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1168.14" y="367.5" >t..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:213) +0x43d (3,200 samples, 0.21%)</title><rect x="700.2" y="501" width="2.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="703.17" y="511.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/mod.rs:174) +0x1e (70,176 samples, 4.66%)</title><rect x="121.8" y="229" width="54.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="124.75" y="239.5" >&lt;core..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::split_off (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:2329) +0x8d (320 samples, 0.02%)</title><rect x="711.3" y="597" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="714.33" y="607.5" ></text>
</g>
<g >
<title>sled::tree::Tree::view_for_key (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:1646) +0x35a (771,320 samples, 51.19%)</title><rect x="106.2" y="661" width="604.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="109.24" y="671.5" >sled::tree::Tree::view_for_key (/root/.cargo/registry/src/index.crates.io-6f17d22bb..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::reserve (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:974) +0x9d (19,200 samples, 1.27%)</title><rect x="106.7" y="197" width="15.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="109.72" y="207.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:2851) +0x96 (680 samples, 0.05%)</title><rect x="710.8" y="581" width="0.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="713.80" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:267) +0x2e (3,200 samples, 0.21%)</title><rect x="700.2" y="517" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="703.17" y="527.5" ></text>
</g>
<g >
<title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:3093) +0x1df (19,200 samples, 1.27%)</title><rect x="630.9" y="213" width="15.0" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="633.90" y="223.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::get (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1742) +0xc50 (5,440 samples, 0.36%)</title><rect x="703.5" y="629" width="4.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="706.52" y="639.5" ></text>
</g>
<g >
<title>sled::serialization::deserialize_bounded_sequence (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/serialization.rs:789) +0x3d (19,200 samples, 1.27%)</title><rect x="106.7" y="357" width="15.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="109.72" y="367.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/boxed.rs:486) +0x3d (208 samples, 0.01%)</title><rect x="1159.3" y="469" width="0.2" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1162.33" y="479.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (2,072 samples, 0.14%)</title><rect x="1157.7" y="517" width="1.6" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1160.71" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (528 samples, 0.04%)</title><rect x="106.2" y="549" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="109.24" y="559.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::get (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1735) +0x1767 (6,400 samples, 0.42%)</title><rect x="697.7" y="629" width="5.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="700.66" y="639.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::init (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/atomic.rs:1147) +0xa (1,088 samples, 0.07%)</title><rect x="702.7" y="597" width="0.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="705.67" y="607.5" ></text>
</g>
<g >
<title>sled::arc::Arc&lt;T&gt;::copy_from_slice (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/arc.rs:59) +0x1f7 (66,048 samples, 4.38%)</title><rect x="645.9" y="277" width="51.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="648.94" y="287.5" >sled:..</text>
</g>
<g >
<title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/node.rs:717) +0x29 (680 samples, 0.05%)</title><rect x="710.3" y="597" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="713.27" y="607.5" ></text>
</g>
<g >
<title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal&gt;::new_internal (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/node.rs:227) +0x21 (400 samples, 0.03%)</title><rect x="1159.5" y="437" width="0.3" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="1162.50" y="447.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:267) +0x2e (19,200 samples, 1.27%)</title><rect x="630.9" y="133" width="15.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="633.90" y="143.5" ></text>
</g>
<g >
<title>proxy_cache::main::{{closure}} (/root/proxy-cache/src/main.rs:45) +0x6a2 (122,880 samples, 8.15%)</title><rect x="10.0" y="709" width="96.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >proxy_cache..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_from_iter_nested.rs:41) +0x2a6 (66,048 samples, 4.38%)</title><rect x="645.9" y="517" width="51.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="648.94" y="527.5" >&lt;allo..</text>
</g>
<g >
<title>sled::pagecache::iobuf::IoBufs::write_to_log (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/iobuf.rs:795) +0x1c51 (2,072 samples, 0.14%)</title><rect x="1157.7" y="661" width="1.6" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1160.71" y="671.5" ></text>
</g>
<g >
<title>tokio::runtime::context::runtime::enter_runtime (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/context/runtime.rs:65) +0xe7 (1,463,208 samples, 97.11%)</title><rect x="10.0" y="789" width="1145.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.00" y="799.5" >tokio::runtime::context::runtime::enter_runtime (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/context/runtime.rs:65) +0xe7</text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/atomic.rs:1133) +0xa (6,216 samples, 0.41%)</title><rect x="1160.0" y="709" width="4.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1162.97" y="719.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:330) +0x4a (2,072 samples, 0.14%)</title><rect x="1157.7" y="533" width="1.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1160.71" y="543.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:330) +0x4a (528 samples, 0.04%)</title><rect x="106.2" y="581" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="109.24" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:242) +0x1b (680 samples, 0.05%)</title><rect x="710.8" y="517" width="0.5" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="713.80" y="527.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (528 samples, 0.04%)</title><rect x="106.2" y="565" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="109.24" y="575.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/traits/iterator.rs:2405) +0xb5 (66,048 samples, 4.38%)</title><rect x="645.9" y="421" width="51.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="648.94" y="431.5" >core:..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:2851) +0x96 (3,168 samples, 0.21%)</title><rect x="707.8" y="613" width="2.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="710.78" y="623.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x1b5 (31,744 samples, 2.11%)</title><rect x="1131.0" y="629" width="24.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1134.00" y="639.5" >a..</text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/atomic.rs:1133) +0xa (2,304 samples, 0.15%)</title><rect x="1155.9" y="453" width="1.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1158.91" y="463.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (3,168 samples, 0.21%)</title><rect x="707.8" y="533" width="2.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="710.78" y="543.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:2985) +0x28 (669,360 samples, 44.42%)</title><rect x="121.8" y="277" width="524.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="124.75" y="287.5" >&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::fr..</text>
</g>
<g >
<title>tokio::runtime::task::raw::poll (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/raw.rs:272) +0x1d (31,744 samples, 2.11%)</title><rect x="1165.1" y="309" width="24.9" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="1168.14" y="319.5" >t..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/traits/iterator.rs) +0x15 (754,608 samples, 50.08%)</title><rect x="106.7" y="613" width="591.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="109.72" y="623.5" >core::iter::traits::iterator::Iterator::collect (/rustc/f6e511eec7342f59a25f7c053..</text>
</g>
<g >
<title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/map.rs:121) +0x3c (688,560 samples, 45.70%)</title><rect x="106.7" y="469" width="539.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="109.72" y="479.5" >&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iter..</text>
</g>
<g >
<title>alloc::vec::Vec&lt;T&gt;::with_capacity (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:480) +0x2f (320 samples, 0.02%)</title><rect x="711.6" y="597" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="714.58" y="607.5" ></text>
</g>
<g >
<title>sled::tree::Tree::split_node (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:1459) +0xd7 (1,360 samples, 0.09%)</title><rect x="710.3" y="645" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="713.27" y="655.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (2,304 samples, 0.15%)</title><rect x="1155.9" y="389" width="1.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1158.91" y="399.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (208 samples, 0.01%)</title><rect x="1159.3" y="421" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1162.33" y="431.5" ></text>
</g>
<g >
<title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/slice.rs:161) +0x4d (3,168 samples, 0.21%)</title><rect x="707.8" y="597" width="2.5" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="710.78" y="607.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:267) +0x2e (3,200 samples, 0.21%)</title><rect x="1122.9" y="549" width="2.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1125.91" y="559.5" ></text>
</g>
<g >
<title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/mod.rs:436) +0x24 (31,744 samples, 2.11%)</title><rect x="1165.1" y="341" width="24.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1168.14" y="351.5" >t..</text>
</g>
<g >
<title>std::panic::catch_unwind (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/panic.rs:345) +0x52 (31,744 samples, 2.11%)</title><rect x="1165.1" y="245" width="24.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1168.14" y="255.5" >s..</text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/take.rs:98) +0xae (70,176 samples, 4.66%)</title><rect x="121.8" y="197" width="54.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="124.75" y="207.5" >&lt;core..</text>
</g>
<g >
<title>&lt;sled::ivec::IVec as sled::serialization::Serialize&gt;::deserialize (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/serialization.rs:137) +0x1d8 (66,048 samples, 4.38%)</title><rect x="645.9" y="341" width="51.8" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="648.94" y="351.5" >&lt;sled..</text>
</g>
<g >
<title>proxy_cache::main::{{closure}}::{{closure}} (/root/proxy-cache/src/main.rs:40) +0x139 (31,744 samples, 2.11%)</title><rect x="1165.1" y="133" width="24.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1168.14" y="143.5" >p..</text>
</g>
<g >
<title>sled::pagecache::iobuf::AlignedBuf::new (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/iobuf.rs:41) +0x95 (524,288 samples, 34.79%)</title><rect x="712.2" y="549" width="410.6" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="715.19" y="559.5" >sled::pagecache::iobuf::AlignedBuf::new (/root/.cargo/r..</text>
</g>
<g >
<title>sled::threadpool::spawn_new_thread::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/threadpool.rs:167) +0x4b (5,256 samples, 0.35%)</title><rect x="1155.9" y="821" width="4.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1158.86" y="831.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x1b5 (122,880 samples, 8.15%)</title><rect x="10.0" y="613" width="96.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >alloc::allo..</text>
</g>
<g >
<title>sled::pagecache::PageCache::allocate (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:774) +0x72 (272 samples, 0.02%)</title><rect x="711.8" y="629" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="714.83" y="639.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:330) +0x4a (160 samples, 0.01%)</title><rect x="712.1" y="597" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="715.07" y="607.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/ops/function.rs:250) +0xe (1,463,208 samples, 97.11%)</title><rect x="10.0" y="869" width="1145.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.00" y="879.5" >core::ops::function::FnOnce::call_once (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/ops/function.rs:250) +0xe</text>
</g>
<g >
<title>sled::node::Node::set_leaf (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/node.rs:119) +0x3e4 (3,200 samples, 0.21%)</title><rect x="700.2" y="597" width="2.5" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="703.17" y="607.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:349) +0x39 (3,200 samples, 0.21%)</title><rect x="700.2" y="565" width="2.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="703.17" y="575.5" ></text>
</g>
<g >
<title>tokio::runtime::task::harness::poll_future::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/harness.rs:499) +0x3b (31,744 samples, 2.11%)</title><rect x="1165.1" y="613" width="24.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1168.14" y="623.5" >t..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/result.rs:1958) +0x28 (669,360 samples, 44.42%)</title><rect x="121.8" y="325" width="524.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="124.75" y="335.5" >&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;..</text>
</g>
<g >
<title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/harness.rs:209) +0x93 (31,744 samples, 2.11%)</title><rect x="1165.1" y="709" width="24.9" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="1168.14" y="719.5" >t..</text>
</g>
<g >
<title>&lt;sled::arc::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/arc.rs:166) +0x19 (66,048 samples, 4.38%)</title><rect x="645.9" y="293" width="51.8" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="648.94" y="303.5" >&lt;sled..</text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_from_iter_nested.rs:41) +0x28e (19,200 samples, 1.27%)</title><rect x="106.7" y="245" width="15.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="109.72" y="255.5" ></text>
</g>
<g >
<title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/boxed.rs:524) +0x50 (208 samples, 0.01%)</title><rect x="1159.3" y="453" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1162.33" y="463.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/result.rs:1958) +0x28 (19,200 samples, 1.27%)</title><rect x="106.7" y="325" width="15.1" height="15.0" fill="rgb(221,75,17)" rx="2" ry="2" />
<text  x="109.72" y="335.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::try_fold (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/traits/iterator.rs:2404) +0x46 (579,984 samples, 38.49%)</title><rect x="176.7" y="149" width="454.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="179.71" y="159.5" >core::iter::traits::iterator::Iterator::try_fold (/rustc/f6e51..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:554) +0x22 (19,200 samples, 1.27%)</title><rect x="106.7" y="181" width="15.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="109.72" y="191.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Context::run (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/scheduler/multi_thread/worker.rs:546) +0x261 (31,744 samples, 2.11%)</title><rect x="1165.1" y="389" width="24.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1168.14" y="399.5" >t..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:349) +0x37 (640 samples, 0.04%)</title><rect x="1125.4" y="597" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1128.42" y="607.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:2752) +0x22 (122,880 samples, 8.15%)</title><rect x="10.0" y="677" width="96.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >alloc::vec:..</text>
</g>
<g >
<title>crossbeam_epoch::internal::Global::push_bag (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/internal.rs:188) +0x160 (6,216 samples, 0.41%)</title><rect x="1160.0" y="741" width="4.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1162.97" y="751.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/panicking.rs:554) +0x36 (31,744 samples, 2.11%)</title><rect x="1165.1" y="213" width="24.9" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1168.14" y="223.5" >s..</text>
</g>
<g >
<title>std::panicking::try::do_call (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/panicking.rs:556) +0x24 (5,256 samples, 0.35%)</title><rect x="1155.9" y="773" width="4.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1158.86" y="783.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::get (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1741) +0xd54 (1,088 samples, 0.07%)</title><rect x="702.7" y="629" width="0.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="705.67" y="639.5" ></text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/result.rs:1958) +0x24 (19,200 samples, 1.27%)</title><rect x="106.7" y="293" width="15.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="109.72" y="303.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Local::flush (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/internal.rs) +0x4e (6,216 samples, 0.41%)</title><rect x="1160.0" y="757" width="4.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1162.97" y="767.5" ></text>
</g>
<g >
<title>sled::tree::Tree::split_node (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:1500) +0x938 (344 samples, 0.02%)</title><rect x="1125.9" y="645" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1128.92" y="655.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::pull (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:2038) +0x17d6 (688,560 samples, 45.70%)</title><rect x="106.7" y="405" width="539.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="109.72" y="415.5" >sled::pagecache::PageCache::pull (/root/.cargo/registry/src/index.crates.i..</text>
</g>
<g >
<title>all (1,506,808 samples, 100%)</title><rect x="10.0" y="981" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="991.5" ></text>
</g>
<g >
<title>crossbeam_epoch::guard::Guard::flush (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/guard.rs:296) +0x47 (2,072 samples, 0.14%)</title><rect x="1157.7" y="645" width="1.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1160.71" y="655.5" ></text>
</g>
<g >
<title>sled::threadpool::spawn_new_thread::{{closure}}::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/threadpool.rs:167) +0x1c (5,256 samples, 0.35%)</title><rect x="1155.9" y="757" width="4.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1158.86" y="767.5" ></text>
</g>
<g >
<title>alloc::vec::from_elem (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/mod.rs:2752) +0x22 (31,744 samples, 2.11%)</title><rect x="1131.0" y="693" width="24.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1134.00" y="703.5" >a..</text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/traits/iterator.rs) +0x15 (669,360 samples, 44.42%)</title><rect x="121.8" y="341" width="524.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="124.75" y="351.5" >core::iter::traits::iterator::Iterator::collect (/rustc/f6e511eec7342f59..</text>
</g>
<g >
<title>std::panicking::try::do_call (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/panicking.rs:554) +0x37 (31,744 samples, 2.11%)</title><rect x="1165.1" y="645" width="24.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1168.14" y="655.5" >s..</text>
</g>
<g >
<title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/thread/mod.rs:523) +0x22 (5,256 samples, 0.35%)</title><rect x="1155.9" y="853" width="4.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1158.86" y="863.5" ></text>
</g>
<g >
<title>tokio::runtime::blocking::pool::Inner::run (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/blocking/pool.rs:511) +0x1eb (31,744 samples, 2.11%)</title><rect x="1165.1" y="805" width="24.9" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="1168.14" y="815.5" >t..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:267) +0x2e (19,200 samples, 1.27%)</title><rect x="106.7" y="133" width="15.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="109.72" y="143.5" ></text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/ops/function.rs:250) +0x1d (2,304 samples, 0.15%)</title><rect x="1155.9" y="581" width="1.8" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1158.91" y="591.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/take.rs:98) +0xae (579,984 samples, 38.49%)</title><rect x="176.7" y="165" width="454.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="179.71" y="175.5" >&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::it..</text>
</g>
<g >
<title>crossbeam_epoch::sync::queue::Queue&lt;T&gt;::push (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/sync/queue.rs:99) +0xad (6,216 samples, 0.41%)</title><rect x="1160.0" y="725" width="4.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1162.97" y="735.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:242) +0x1b (208 samples, 0.01%)</title><rect x="1159.8" y="421" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1162.81" y="431.5" ></text>
</g>
<g >
<title>core::iter::traits::iterator::Iterator::collect (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/traits/iterator.rs) +0x15 (19,200 samples, 1.27%)</title><rect x="106.7" y="341" width="15.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="109.72" y="351.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/mod.rs:191) +0x38 (66,048 samples, 4.38%)</title><rect x="645.9" y="453" width="51.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="648.94" y="463.5" >&lt;core..</text>
</g>
<g >
<title>tokio::runtime::context::set_scheduler (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/context.rs:181) +0x31 (31,744 samples, 2.11%)</title><rect x="1165.1" y="485" width="24.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1168.14" y="495.5" >t..</text>
</g>
<g >
<title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/result.rs:1958) +0x24 (669,360 samples, 44.42%)</title><rect x="121.8" y="293" width="524.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="124.75" y="303.5" >&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;..</text>
</g>
<g >
<title>tokio::runtime::task::raw::RawTask::poll (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/raw.rs:202) +0x27 (31,744 samples, 2.11%)</title><rect x="1165.1" y="325" width="24.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="1168.14" y="335.5" >t..</text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:658) +0x4ad (19,200 samples, 1.27%)</title><rect x="630.9" y="165" width="15.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="633.90" y="175.5" ></text>
</g>
<g >
<title>&lt;sled::node::Leaf as core::clone::Clone&gt;::clone (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/node.rs:718) +0x3b (680 samples, 0.05%)</title><rect x="710.8" y="597" width="0.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="713.80" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (6,216 samples, 0.41%)</title><rect x="1160.0" y="629" width="4.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1162.97" y="639.5" ></text>
</g>
<g >
<title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/mod.rs:174) +0x2a (66,048 samples, 4.38%)</title><rect x="645.9" y="469" width="51.8" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="648.94" y="479.5" >&lt;core..</text>
</g>
<g >
<title>__rust_try +0x1d (31,744 samples, 2.11%)</title><rect x="1165.1" y="661" width="24.9" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1168.14" y="671.5" >_..</text>
</g>
<g >
<title>std::rt::lang_start_internal (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/rt.rs:143) +0x460 (1,463,208 samples, 97.11%)</title><rect x="10.0" y="917" width="1145.9" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="13.00" y="927.5" >std::rt::lang_start_internal (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/rt.rs:143) +0x460</text>
</g>
<g >
<title>alloc::collections::btree::node::InternalNode&lt;K,V&gt;::new (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/collections/btree/node.rs:115) +0x2d (400 samples, 0.03%)</title><rect x="1159.5" y="421" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1162.50" y="431.5" ></text>
</g>
<g >
<title>sled::pagecache::iobuf::roll_iobuf (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/iobuf.rs:867) +0x2aa (384 samples, 0.03%)</title><rect x="1164.8" y="773" width="0.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1167.84" y="783.5" ></text>
</g>
<g >
<title>sled::node::Node::set_leaf (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/node.rs:118) +0x301 (3,200 samples, 0.21%)</title><rect x="697.7" y="597" width="2.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="700.66" y="607.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:330) +0x4a (160 samples, 0.01%)</title><rect x="711.9" y="581" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="714.88" y="591.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_extend.rs:18) +0x12 (19,200 samples, 1.27%)</title><rect x="106.7" y="229" width="15.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="109.72" y="239.5" ></text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (320 samples, 0.02%)</title><rect x="711.6" y="533" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="714.58" y="543.5" ></text>
</g>
<g >
<title>alloc::alloc::exchange_malloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:330) +0x4a (160 samples, 0.01%)</title><rect x="1125.9" y="597" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1128.94" y="607.5" ></text>
</g>
<g >
<title>sled::pagecache::segment::Segment::active_to_inactive (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/segment.rs:285) +0x39f (816 samples, 0.05%)</title><rect x="1159.3" y="565" width="0.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="1162.33" y="575.5" ></text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:242) +0x1b (320 samples, 0.02%)</title><rect x="711.6" y="549" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="714.58" y="559.5" ></text>
</g>
<g >
<title>crossbeam_epoch::atomic::Owned&lt;T&gt;::new (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/atomic.rs:1133) +0xa (1,088 samples, 0.07%)</title><rect x="702.7" y="613" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="705.67" y="623.5" ></text>
</g>
<g >
<title>sled::pagecache::PageCache::get::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/pagecache/mod.rs:1719) +0x4e (66,048 samples, 4.38%)</title><rect x="645.9" y="389" width="51.8" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="648.94" y="399.5" >sled:..</text>
</g>
<g >
<title>alloc::alloc::Global::grow_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:213) +0x43d (19,200 samples, 1.27%)</title><rect x="106.7" y="117" width="15.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="109.72" y="127.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_from_iter.rs) +0x15 (669,360 samples, 44.42%)</title><rect x="121.8" y="261" width="524.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="124.75" y="271.5" >&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::f..</text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/core.rs:320) +0x38 (31,744 samples, 2.11%)</title><rect x="1165.1" y="165" width="24.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1168.14" y="175.5" >t..</text>
</g>
<g >
<title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:247) +0x1e (122,880 samples, 8.15%)</title><rect x="10.0" y="629" width="96.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >&lt;alloc::all..</text>
</g>
<g >
<title>sled::node::Node::parent_split (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/node.rs:154) +0x194 (3,200 samples, 0.21%)</title><rect x="1122.9" y="629" width="2.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1125.91" y="639.5" ></text>
</g>
<g >
<title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/task/core.rs:331) +0x69 (31,744 samples, 2.11%)</title><rect x="1165.1" y="149" width="24.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1168.14" y="159.5" >t..</text>
</g>
<g >
<title>core::ops::function::FnOnce::call_once (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/ops/function.rs:250) +0xd (2,304 samples, 0.15%)</title><rect x="1155.9" y="517" width="1.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1158.91" y="527.5" ></text>
</g>
<g >
<title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/sys/thread_local/native/lazy.rs:56) +0x62 (2,304 samples, 0.15%)</title><rect x="1155.9" y="549" width="1.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1158.91" y="559.5" ></text>
</g>
<g >
<title>std::rt::lang_start (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/rt.rs:163) +0x38 (1,463,208 samples, 97.11%)</title><rect x="10.0" y="933" width="1145.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="13.00" y="943.5" >std::rt::lang_start (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/rt.rs:163) +0x38</text>
</g>
<g >
<title>core::iter::adapters::map::map_try_fold::{{closure}} (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/iter/adapters/map.rs:95) +0x3c (66,048 samples, 4.38%)</title><rect x="645.9" y="405" width="51.8" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="648.94" y="415.5" >core:..</text>
</g>
<g >
<title>proxy_cache::main (/root/proxy-cache/src/main.rs:43) +0x104 (1,463,208 samples, 97.11%)</title><rect x="10.0" y="853" width="1145.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.00" y="863.5" >proxy_cache::main (/root/proxy-cache/src/main.rs:43) +0x104</text>
</g>
<g >
<title>sled::tree::Tree::split_node (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/tree.rs:1467) +0x558 (524,656 samples, 34.82%)</title><rect x="712.0" y="645" width="410.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="715.04" y="655.5" >sled::tree::Tree::split_node (/root/.cargo/registry/src/..</text>
</g>
<g >
<title>proxy_cache::main::{{closure}} (/root/proxy-cache/src/main.rs:50) +0x898 (1,302,432 samples, 86.44%)</title><rect x="106.2" y="709" width="1020.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="109.24" y="719.5" >proxy_cache::main::{{closure}} (/root/proxy-cache/src/main.rs:50) +0x898</text>
</g>
<g >
<title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/core/src/panic/unwind_safe.rs:273) +0x23 (31,744 samples, 2.11%)</title><rect x="1165.1" y="629" width="24.9" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1168.14" y="639.5" >&lt;..</text>
</g>
<g >
<title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:349) +0x39 (6,144 samples, 0.41%)</title><rect x="1126.2" y="677" width="4.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1129.19" y="687.5" ></text>
</g>
<g >
<title>crossbeam_epoch::internal::Global::push_bag (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-epoch-0.9.18/src/internal.rs:188) +0x160 (2,072 samples, 0.14%)</title><rect x="1157.7" y="613" width="1.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1160.71" y="623.5" ></text>
</g>
<g >
<title>std::panicking::try::do_call (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/std/src/panicking.rs:556) +0x41 (38,344 samples, 2.54%)</title><rect x="1160.0" y="885" width="30.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1162.97" y="895.5" >st..</text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (384 samples, 0.03%)</title><rect x="1164.8" y="693" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1167.84" y="703.5" ></text>
</g>
<g >
<title>alloc::raw_vec::finish_grow (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:773) +0x1ca (19,200 samples, 1.27%)</title><rect x="630.9" y="149" width="15.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="633.90" y="159.5" ></text>
</g>
<g >
<title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/vec/spec_from_iter_nested.rs:41) +0x28e (599,184 samples, 39.77%)</title><rect x="176.7" y="245" width="469.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="179.71" y="255.5" >&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFr..</text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/scheduler/multi_thread/mod.rs:89) +0x5b (1,463,208 samples, 97.11%)</title><rect x="10.0" y="805" width="1145.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="13.00" y="815.5" >tokio::runtime::scheduler::multi_thread::MultiThread::block_on (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/scheduler/m..</text>
</g>
<g >
<title>alloc::alloc::alloc (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:100) +0x62 (208 samples, 0.01%)</title><rect x="1159.8" y="389" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1162.81" y="399.5" ></text>
</g>
<g >
<title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/raw_vec.rs:425) +0x5a (3,168 samples, 0.21%)</title><rect x="707.8" y="581" width="2.5" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="710.78" y="591.5" ></text>
</g>
<g >
<title>proxy_cache::http_request_handler::{{closure}} (/root/proxy-cache/src/main.rs:75) +0x9c (31,744 samples, 2.11%)</title><rect x="1165.1" y="117" width="24.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1168.14" y="127.5" >p..</text>
</g>
<g >
<title>alloc::alloc::Global::alloc_impl (/rustc/f6e511eec7342f59a25f7c0534f1dbea00d01b14/library/alloc/src/alloc.rs:181) +0x154 (680 samples, 0.05%)</title><rect x="710.3" y="501" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="713.27" y="511.5" ></text>
</g>
<g >
<title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.41.0/src/runtime/scheduler/multi_thread/worker.rs:595) +0x36b (31,744 samples, 2.11%)</title><rect x="1165.1" y="373" width="24.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1168.14" y="383.5" >t..</text>
</g>
<g >
<title>&lt;sled::arc::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (/root/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sled-0.34.7/src/arc.rs:166) +0x19 (579,984 samples, 38.49%)</title><rect x="176.7" y="69" width="454.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="179.71" y="79.5" >&lt;sled::arc::Arc&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (/roo..</text>
</g>
</g>
</svg>
